function1_name,function2_name,file_name_function1,file_name_function2,parameter_passed,level_of_abstraction_function1,level_of_abstraction_function2,mapping_type,code_function1,code_function2
onCreate,openOrCreateDatabase,SQLInjectionActivity.java,unknown,"[['""sqli""', 'MODE_PRIVATE', 'null']]",Mid-level (Logic),Unknown,Direct,"onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        try {
            mDB = openOrCreateDatabase(""sqli"", MODE_PRIVATE, null);
            mDB.execSQL(""DROP TABLE IF EXISTS sqliuser;"");
            mDB.execSQL(""CREATE TABLE IF NOT EXISTS sqliuser(user VARCHAR, password VARCHAR, credit_card VARCHAR);"");
            mDB.execSQL(""INSERT INTO sqliuser VALUES ('admin', 'passwd123', '1234567812345678');"");
            mDB.execSQL(""INSERT INTO sqliuser VALUES ('diva', 'p@ssword', '1111222233334444');"");
            mDB.execSQL(""INSERT INTO sqliuser VALUES ('john', 'password123', '5555666677778888');"");

        }",
onCreate,mDB.execSQL,SQLInjectionActivity.java,unknown,[],Mid-level (Logic),Unknown,Direct,"onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        try {
            mDB = openOrCreateDatabase(""sqli"", MODE_PRIVATE, null);
            mDB.execSQL(""DROP TABLE IF EXISTS sqliuser;"");
            mDB.execSQL(""CREATE TABLE IF NOT EXISTS sqliuser(user VARCHAR, password VARCHAR, credit_card VARCHAR);"");
            mDB.execSQL(""INSERT INTO sqliuser VALUES ('admin', 'passwd123', '1234567812345678');"");
            mDB.execSQL(""INSERT INTO sqliuser VALUES ('diva', 'p@ssword', '1111222233334444');"");
            mDB.execSQL(""INSERT INTO sqliuser VALUES ('john', 'password123', '5555666677778888');"");

        }",
onCreate,mDB.execSQL,SQLInjectionActivity.java,unknown,[],Mid-level (Logic),Unknown,Direct,"onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        try {
            mDB = openOrCreateDatabase(""sqli"", MODE_PRIVATE, null);
            mDB.execSQL(""DROP TABLE IF EXISTS sqliuser;"");
            mDB.execSQL(""CREATE TABLE IF NOT EXISTS sqliuser(user VARCHAR, password VARCHAR, credit_card VARCHAR);"");
            mDB.execSQL(""INSERT INTO sqliuser VALUES ('admin', 'passwd123', '1234567812345678');"");
            mDB.execSQL(""INSERT INTO sqliuser VALUES ('diva', 'p@ssword', '1111222233334444');"");
            mDB.execSQL(""INSERT INTO sqliuser VALUES ('john', 'password123', '5555666677778888');"");

        }",
onCreate,mDB.execSQL,SQLInjectionActivity.java,unknown,[],Mid-level (Logic),Unknown,Direct,"onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        try {
            mDB = openOrCreateDatabase(""sqli"", MODE_PRIVATE, null);
            mDB.execSQL(""DROP TABLE IF EXISTS sqliuser;"");
            mDB.execSQL(""CREATE TABLE IF NOT EXISTS sqliuser(user VARCHAR, password VARCHAR, credit_card VARCHAR);"");
            mDB.execSQL(""INSERT INTO sqliuser VALUES ('admin', 'passwd123', '1234567812345678');"");
            mDB.execSQL(""INSERT INTO sqliuser VALUES ('diva', 'p@ssword', '1111222233334444');"");
            mDB.execSQL(""INSERT INTO sqliuser VALUES ('john', 'password123', '5555666677778888');"");

        }",
onCreate,mDB.execSQL,SQLInjectionActivity.java,unknown,[],Mid-level (Logic),Unknown,Direct,"onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        try {
            mDB = openOrCreateDatabase(""sqli"", MODE_PRIVATE, null);
            mDB.execSQL(""DROP TABLE IF EXISTS sqliuser;"");
            mDB.execSQL(""CREATE TABLE IF NOT EXISTS sqliuser(user VARCHAR, password VARCHAR, credit_card VARCHAR);"");
            mDB.execSQL(""INSERT INTO sqliuser VALUES ('admin', 'passwd123', '1234567812345678');"");
            mDB.execSQL(""INSERT INTO sqliuser VALUES ('diva', 'p@ssword', '1111222233334444');"");
            mDB.execSQL(""INSERT INTO sqliuser VALUES ('john', 'password123', '5555666677778888');"");

        }",
onCreate,mDB.execSQL,SQLInjectionActivity.java,unknown,[],Mid-level (Logic),Unknown,Direct,"onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        try {
            mDB = openOrCreateDatabase(""sqli"", MODE_PRIVATE, null);
            mDB.execSQL(""DROP TABLE IF EXISTS sqliuser;"");
            mDB.execSQL(""CREATE TABLE IF NOT EXISTS sqliuser(user VARCHAR, password VARCHAR, credit_card VARCHAR);"");
            mDB.execSQL(""INSERT INTO sqliuser VALUES ('admin', 'passwd123', '1234567812345678');"");
            mDB.execSQL(""INSERT INTO sqliuser VALUES ('diva', 'p@ssword', '1111222233334444');"");
            mDB.execSQL(""INSERT INTO sqliuser VALUES ('john', 'password123', '5555666677778888');"");

        }",
onCreate,Log.d,SQLInjectionActivity.java,unknown,[],Mid-level (Logic),Unknown,Direct,"onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        try {
            mDB = openOrCreateDatabase(""sqli"", MODE_PRIVATE, null);
            mDB.execSQL(""DROP TABLE IF EXISTS sqliuser;"");
            mDB.execSQL(""CREATE TABLE IF NOT EXISTS sqliuser(user VARCHAR, password VARCHAR, credit_card VARCHAR);"");
            mDB.execSQL(""INSERT INTO sqliuser VALUES ('admin', 'passwd123', '1234567812345678');"");
            mDB.execSQL(""INSERT INTO sqliuser VALUES ('diva', 'p@ssword', '1111222233334444');"");
            mDB.execSQL(""INSERT INTO sqliuser VALUES ('john', 'password123', '5555666677778888');"");

        }",
onCreate,e.getMessage,SQLInjectionActivity.java,unknown,[],Mid-level (Logic),Unknown,Direct,"onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        try {
            mDB = openOrCreateDatabase(""sqli"", MODE_PRIVATE, null);
            mDB.execSQL(""DROP TABLE IF EXISTS sqliuser;"");
            mDB.execSQL(""CREATE TABLE IF NOT EXISTS sqliuser(user VARCHAR, password VARCHAR, credit_card VARCHAR);"");
            mDB.execSQL(""INSERT INTO sqliuser VALUES ('admin', 'passwd123', '1234567812345678');"");
            mDB.execSQL(""INSERT INTO sqliuser VALUES ('diva', 'p@ssword', '1111222233334444');"");
            mDB.execSQL(""INSERT INTO sqliuser VALUES ('john', 'password123', '5555666677778888');"");

        }",
onCreate,setContentView,SQLInjectionActivity.java,unknown,[['activity_sqlinjection']],Mid-level (Logic),Unknown,Direct,"onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        try {
            mDB = openOrCreateDatabase(""sqli"", MODE_PRIVATE, null);
            mDB.execSQL(""DROP TABLE IF EXISTS sqliuser;"");
            mDB.execSQL(""CREATE TABLE IF NOT EXISTS sqliuser(user VARCHAR, password VARCHAR, credit_card VARCHAR);"");
            mDB.execSQL(""INSERT INTO sqliuser VALUES ('admin', 'passwd123', '1234567812345678');"");
            mDB.execSQL(""INSERT INTO sqliuser VALUES ('diva', 'p@ssword', '1111222233334444');"");
            mDB.execSQL(""INSERT INTO sqliuser VALUES ('john', 'password123', '5555666677778888');"");

        }",
search,findViewById,SQLInjectionActivity.java,unknown,[['ivi1search']],High-level (Application),Unknown,Direct,"search(View view) {
        EditText srchtxt = (EditText) findViewById(R.id.ivi1search);
        Cursor cr = null;
        try {
            cr = mDB.rawQuery(""SELECT * FROM sqliuser WHERE user = '"" + srchtxt.getText().toString() + ""'"", null);
            StringBuilder strb = new StringBuilder("""");
            if ((cr != null) && (cr.getCount() > 0)) {
                cr.moveToFirst();

                do {
                    strb.append(""User: ("" + cr.getString(0) + "") pass: ("" + cr.getString(1) + "") Credit card: ("" + cr.getString(2) + "")\n"");
                }",
search,mDB.rawQuery,SQLInjectionActivity.java,unknown,[],High-level (Application),Unknown,Direct,"search(View view) {
        EditText srchtxt = (EditText) findViewById(R.id.ivi1search);
        Cursor cr = null;
        try {
            cr = mDB.rawQuery(""SELECT * FROM sqliuser WHERE user = '"" + srchtxt.getText().toString() + ""'"", null);
            StringBuilder strb = new StringBuilder("""");
            if ((cr != null) && (cr.getCount() > 0)) {
                cr.moveToFirst();

                do {
                    strb.append(""User: ("" + cr.getString(0) + "") pass: ("" + cr.getString(1) + "") Credit card: ("" + cr.getString(2) + "")\n"");
                }",
search,srchtxt.getText,SQLInjectionActivity.java,unknown,[],High-level (Application),Unknown,Direct,"search(View view) {
        EditText srchtxt = (EditText) findViewById(R.id.ivi1search);
        Cursor cr = null;
        try {
            cr = mDB.rawQuery(""SELECT * FROM sqliuser WHERE user = '"" + srchtxt.getText().toString() + ""'"", null);
            StringBuilder strb = new StringBuilder("""");
            if ((cr != null) && (cr.getCount() > 0)) {
                cr.moveToFirst();

                do {
                    strb.append(""User: ("" + cr.getString(0) + "") pass: ("" + cr.getString(1) + "") Credit card: ("" + cr.getString(2) + "")\n"");
                }",
search,toString,SQLInjectionActivity.java,unknown,"[[], [], []]",High-level (Application),Unknown,Direct,"search(View view) {
        EditText srchtxt = (EditText) findViewById(R.id.ivi1search);
        Cursor cr = null;
        try {
            cr = mDB.rawQuery(""SELECT * FROM sqliuser WHERE user = '"" + srchtxt.getText().toString() + ""'"", null);
            StringBuilder strb = new StringBuilder("""");
            if ((cr != null) && (cr.getCount() > 0)) {
                cr.moveToFirst();

                do {
                    strb.append(""User: ("" + cr.getString(0) + "") pass: ("" + cr.getString(1) + "") Credit card: ("" + cr.getString(2) + "")\n"");
                }",
search,cr.getCount,SQLInjectionActivity.java,unknown,[],High-level (Application),Unknown,Direct,"search(View view) {
        EditText srchtxt = (EditText) findViewById(R.id.ivi1search);
        Cursor cr = null;
        try {
            cr = mDB.rawQuery(""SELECT * FROM sqliuser WHERE user = '"" + srchtxt.getText().toString() + ""'"", null);
            StringBuilder strb = new StringBuilder("""");
            if ((cr != null) && (cr.getCount() > 0)) {
                cr.moveToFirst();

                do {
                    strb.append(""User: ("" + cr.getString(0) + "") pass: ("" + cr.getString(1) + "") Credit card: ("" + cr.getString(2) + "")\n"");
                }",
search,cr.moveToFirst,SQLInjectionActivity.java,unknown,[],High-level (Application),Unknown,Direct,"search(View view) {
        EditText srchtxt = (EditText) findViewById(R.id.ivi1search);
        Cursor cr = null;
        try {
            cr = mDB.rawQuery(""SELECT * FROM sqliuser WHERE user = '"" + srchtxt.getText().toString() + ""'"", null);
            StringBuilder strb = new StringBuilder("""");
            if ((cr != null) && (cr.getCount() > 0)) {
                cr.moveToFirst();

                do {
                    strb.append(""User: ("" + cr.getString(0) + "") pass: ("" + cr.getString(1) + "") Credit card: ("" + cr.getString(2) + "")\n"");
                }",
search,cr.moveToNext,SQLInjectionActivity.java,unknown,[],High-level (Application),Unknown,Direct,"search(View view) {
        EditText srchtxt = (EditText) findViewById(R.id.ivi1search);
        Cursor cr = null;
        try {
            cr = mDB.rawQuery(""SELECT * FROM sqliuser WHERE user = '"" + srchtxt.getText().toString() + ""'"", null);
            StringBuilder strb = new StringBuilder("""");
            if ((cr != null) && (cr.getCount() > 0)) {
                cr.moveToFirst();

                do {
                    strb.append(""User: ("" + cr.getString(0) + "") pass: ("" + cr.getString(1) + "") Credit card: ("" + cr.getString(2) + "")\n"");
                }",
search,strb.append,SQLInjectionActivity.java,unknown,[],High-level (Application),Unknown,Direct,"search(View view) {
        EditText srchtxt = (EditText) findViewById(R.id.ivi1search);
        Cursor cr = null;
        try {
            cr = mDB.rawQuery(""SELECT * FROM sqliuser WHERE user = '"" + srchtxt.getText().toString() + ""'"", null);
            StringBuilder strb = new StringBuilder("""");
            if ((cr != null) && (cr.getCount() > 0)) {
                cr.moveToFirst();

                do {
                    strb.append(""User: ("" + cr.getString(0) + "") pass: ("" + cr.getString(1) + "") Credit card: ("" + cr.getString(2) + "")\n"");
                }",
search,cr.getString,SQLInjectionActivity.java,unknown,[],High-level (Application),Unknown,Direct,"search(View view) {
        EditText srchtxt = (EditText) findViewById(R.id.ivi1search);
        Cursor cr = null;
        try {
            cr = mDB.rawQuery(""SELECT * FROM sqliuser WHERE user = '"" + srchtxt.getText().toString() + ""'"", null);
            StringBuilder strb = new StringBuilder("""");
            if ((cr != null) && (cr.getCount() > 0)) {
                cr.moveToFirst();

                do {
                    strb.append(""User: ("" + cr.getString(0) + "") pass: ("" + cr.getString(1) + "") Credit card: ("" + cr.getString(2) + "")\n"");
                }",
search,cr.getString,SQLInjectionActivity.java,unknown,[],High-level (Application),Unknown,Direct,"search(View view) {
        EditText srchtxt = (EditText) findViewById(R.id.ivi1search);
        Cursor cr = null;
        try {
            cr = mDB.rawQuery(""SELECT * FROM sqliuser WHERE user = '"" + srchtxt.getText().toString() + ""'"", null);
            StringBuilder strb = new StringBuilder("""");
            if ((cr != null) && (cr.getCount() > 0)) {
                cr.moveToFirst();

                do {
                    strb.append(""User: ("" + cr.getString(0) + "") pass: ("" + cr.getString(1) + "") Credit card: ("" + cr.getString(2) + "")\n"");
                }",
search,cr.getString,SQLInjectionActivity.java,unknown,[],High-level (Application),Unknown,Direct,"search(View view) {
        EditText srchtxt = (EditText) findViewById(R.id.ivi1search);
        Cursor cr = null;
        try {
            cr = mDB.rawQuery(""SELECT * FROM sqliuser WHERE user = '"" + srchtxt.getText().toString() + ""'"", null);
            StringBuilder strb = new StringBuilder("""");
            if ((cr != null) && (cr.getCount() > 0)) {
                cr.moveToFirst();

                do {
                    strb.append(""User: ("" + cr.getString(0) + "") pass: ("" + cr.getString(1) + "") Credit card: ("" + cr.getString(2) + "")\n"");
                }",
search,strb.append,SQLInjectionActivity.java,unknown,[],High-level (Application),Unknown,Direct,"search(View view) {
        EditText srchtxt = (EditText) findViewById(R.id.ivi1search);
        Cursor cr = null;
        try {
            cr = mDB.rawQuery(""SELECT * FROM sqliuser WHERE user = '"" + srchtxt.getText().toString() + ""'"", null);
            StringBuilder strb = new StringBuilder("""");
            if ((cr != null) && (cr.getCount() > 0)) {
                cr.moveToFirst();

                do {
                    strb.append(""User: ("" + cr.getString(0) + "") pass: ("" + cr.getString(1) + "") Credit card: ("" + cr.getString(2) + "")\n"");
                }",
search,srchtxt.getText,SQLInjectionActivity.java,unknown,[],High-level (Application),Unknown,Direct,"search(View view) {
        EditText srchtxt = (EditText) findViewById(R.id.ivi1search);
        Cursor cr = null;
        try {
            cr = mDB.rawQuery(""SELECT * FROM sqliuser WHERE user = '"" + srchtxt.getText().toString() + ""'"", null);
            StringBuilder strb = new StringBuilder("""");
            if ((cr != null) && (cr.getCount() > 0)) {
                cr.moveToFirst();

                do {
                    strb.append(""User: ("" + cr.getString(0) + "") pass: ("" + cr.getString(1) + "") Credit card: ("" + cr.getString(2) + "")\n"");
                }",
search,toString,SQLInjectionActivity.java,unknown,"[[], [], []]",High-level (Application),Unknown,Direct,"search(View view) {
        EditText srchtxt = (EditText) findViewById(R.id.ivi1search);
        Cursor cr = null;
        try {
            cr = mDB.rawQuery(""SELECT * FROM sqliuser WHERE user = '"" + srchtxt.getText().toString() + ""'"", null);
            StringBuilder strb = new StringBuilder("""");
            if ((cr != null) && (cr.getCount() > 0)) {
                cr.moveToFirst();

                do {
                    strb.append(""User: ("" + cr.getString(0) + "") pass: ("" + cr.getString(1) + "") Credit card: ("" + cr.getString(2) + "")\n"");
                }",
search,Toast.makeText,SQLInjectionActivity.java,unknown,[],High-level (Application),Unknown,Direct,"search(View view) {
        EditText srchtxt = (EditText) findViewById(R.id.ivi1search);
        Cursor cr = null;
        try {
            cr = mDB.rawQuery(""SELECT * FROM sqliuser WHERE user = '"" + srchtxt.getText().toString() + ""'"", null);
            StringBuilder strb = new StringBuilder("""");
            if ((cr != null) && (cr.getCount() > 0)) {
                cr.moveToFirst();

                do {
                    strb.append(""User: ("" + cr.getString(0) + "") pass: ("" + cr.getString(1) + "") Credit card: ("" + cr.getString(2) + "")\n"");
                }",
search,show,SQLInjectionActivity.java,unknown,[[]],High-level (Application),Unknown,Direct,"search(View view) {
        EditText srchtxt = (EditText) findViewById(R.id.ivi1search);
        Cursor cr = null;
        try {
            cr = mDB.rawQuery(""SELECT * FROM sqliuser WHERE user = '"" + srchtxt.getText().toString() + ""'"", null);
            StringBuilder strb = new StringBuilder("""");
            if ((cr != null) && (cr.getCount() > 0)) {
                cr.moveToFirst();

                do {
                    strb.append(""User: ("" + cr.getString(0) + "") pass: ("" + cr.getString(1) + "") Credit card: ("" + cr.getString(2) + "")\n"");
                }",
search,strb.toString,SQLInjectionActivity.java,unknown,[],High-level (Application),Unknown,Direct,"search(View view) {
        EditText srchtxt = (EditText) findViewById(R.id.ivi1search);
        Cursor cr = null;
        try {
            cr = mDB.rawQuery(""SELECT * FROM sqliuser WHERE user = '"" + srchtxt.getText().toString() + ""'"", null);
            StringBuilder strb = new StringBuilder("""");
            if ((cr != null) && (cr.getCount() > 0)) {
                cr.moveToFirst();

                do {
                    strb.append(""User: ("" + cr.getString(0) + "") pass: ("" + cr.getString(1) + "") Credit card: ("" + cr.getString(2) + "")\n"");
                }",
search,Log.d,SQLInjectionActivity.java,unknown,[],High-level (Application),Unknown,Direct,"search(View view) {
        EditText srchtxt = (EditText) findViewById(R.id.ivi1search);
        Cursor cr = null;
        try {
            cr = mDB.rawQuery(""SELECT * FROM sqliuser WHERE user = '"" + srchtxt.getText().toString() + ""'"", null);
            StringBuilder strb = new StringBuilder("""");
            if ((cr != null) && (cr.getCount() > 0)) {
                cr.moveToFirst();

                do {
                    strb.append(""User: ("" + cr.getString(0) + "") pass: ("" + cr.getString(1) + "") Credit card: ("" + cr.getString(2) + "")\n"");
                }",
search,e.getMessage,SQLInjectionActivity.java,unknown,[],High-level (Application),Unknown,Direct,"search(View view) {
        EditText srchtxt = (EditText) findViewById(R.id.ivi1search);
        Cursor cr = null;
        try {
            cr = mDB.rawQuery(""SELECT * FROM sqliuser WHERE user = '"" + srchtxt.getText().toString() + ""'"", null);
            StringBuilder strb = new StringBuilder("""");
            if ((cr != null) && (cr.getCount() > 0)) {
                cr.moveToFirst();

                do {
                    strb.append(""User: ("" + cr.getString(0) + "") pass: ("" + cr.getString(1) + "") Credit card: ("" + cr.getString(2) + "")\n"");
                }",
onCreate,setContentView,AccessControl3Activity.java,unknown,[['activity_access_control3']],Mid-level (Logic),Unknown,Direct,"onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_access_control3);

        SharedPreferences spref = PreferenceManager.getDefaultSharedPreferences(this);
        String pin = spref.getString(getString(R.string.pkey), """");

        if (!pin.isEmpty()) {
            Button vbutton = (Button) findViewById(R.id.aci3viewbutton);
            vbutton.setVisibility(View.VISIBLE);
        }",
onCreate,PreferenceManager.getDefaultSharedPreferences,AccessControl3Activity.java,unknown,[],Mid-level (Logic),Unknown,Direct,"onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_access_control3);

        SharedPreferences spref = PreferenceManager.getDefaultSharedPreferences(this);
        String pin = spref.getString(getString(R.string.pkey), """");

        if (!pin.isEmpty()) {
            Button vbutton = (Button) findViewById(R.id.aci3viewbutton);
            vbutton.setVisibility(View.VISIBLE);
        }",
onCreate,spref.getString,AccessControl3Activity.java,unknown,[],Mid-level (Logic),Unknown,Direct,"onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_access_control3);

        SharedPreferences spref = PreferenceManager.getDefaultSharedPreferences(this);
        String pin = spref.getString(getString(R.string.pkey), """");

        if (!pin.isEmpty()) {
            Button vbutton = (Button) findViewById(R.id.aci3viewbutton);
            vbutton.setVisibility(View.VISIBLE);
        }",
onCreate,getString,AccessControl3Activity.java,unknown,"[['MethodInvocation(arguments=[MemberReference(member=pkey, postfix_operators=[], prefix_operators=[], qualifier=R.string, selectors=[])], member=getString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)', '""""'], ['pkey']]",Mid-level (Logic),Unknown,Direct,"onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_access_control3);

        SharedPreferences spref = PreferenceManager.getDefaultSharedPreferences(this);
        String pin = spref.getString(getString(R.string.pkey), """");

        if (!pin.isEmpty()) {
            Button vbutton = (Button) findViewById(R.id.aci3viewbutton);
            vbutton.setVisibility(View.VISIBLE);
        }",
onCreate,pin.isEmpty,AccessControl3Activity.java,unknown,[],Mid-level (Logic),Unknown,Direct,"onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_access_control3);

        SharedPreferences spref = PreferenceManager.getDefaultSharedPreferences(this);
        String pin = spref.getString(getString(R.string.pkey), """");

        if (!pin.isEmpty()) {
            Button vbutton = (Button) findViewById(R.id.aci3viewbutton);
            vbutton.setVisibility(View.VISIBLE);
        }",
onCreate,findViewById,AccessControl3Activity.java,unknown,[['aci3viewbutton']],Mid-level (Logic),Unknown,Direct,"onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_access_control3);

        SharedPreferences spref = PreferenceManager.getDefaultSharedPreferences(this);
        String pin = spref.getString(getString(R.string.pkey), """");

        if (!pin.isEmpty()) {
            Button vbutton = (Button) findViewById(R.id.aci3viewbutton);
            vbutton.setVisibility(View.VISIBLE);
        }",
onCreate,vbutton.setVisibility,AccessControl3Activity.java,unknown,[],Mid-level (Logic),Unknown,Direct,"onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_access_control3);

        SharedPreferences spref = PreferenceManager.getDefaultSharedPreferences(this);
        String pin = spref.getString(getString(R.string.pkey), """");

        if (!pin.isEmpty()) {
            Button vbutton = (Button) findViewById(R.id.aci3viewbutton);
            vbutton.setVisibility(View.VISIBLE);
        }",
addPin,PreferenceManager.getDefaultSharedPreferences,AccessControl3Activity.java,unknown,[],High-level (Application),Unknown,Direct,"addPin(View view) {
        SharedPreferences spref = PreferenceManager.getDefaultSharedPreferences(this);
        SharedPreferences.Editor spedit = spref.edit();
        EditText pinTxt = (EditText) findViewById(R.id.aci3Pin);
        String pin = pinTxt.getText().toString();

        if (pin == null || pin.isEmpty()) {
            Toast.makeText(this, ""Please Enter a valid pin!"", Toast.LENGTH_SHORT).show();
        }",
addPin,spref.edit,AccessControl3Activity.java,unknown,[],High-level (Application),Unknown,Direct,"addPin(View view) {
        SharedPreferences spref = PreferenceManager.getDefaultSharedPreferences(this);
        SharedPreferences.Editor spedit = spref.edit();
        EditText pinTxt = (EditText) findViewById(R.id.aci3Pin);
        String pin = pinTxt.getText().toString();

        if (pin == null || pin.isEmpty()) {
            Toast.makeText(this, ""Please Enter a valid pin!"", Toast.LENGTH_SHORT).show();
        }",
addPin,findViewById,AccessControl3Activity.java,unknown,"[['aci3Pin'], ['aci3viewbutton']]",High-level (Application),Unknown,Direct,"addPin(View view) {
        SharedPreferences spref = PreferenceManager.getDefaultSharedPreferences(this);
        SharedPreferences.Editor spedit = spref.edit();
        EditText pinTxt = (EditText) findViewById(R.id.aci3Pin);
        String pin = pinTxt.getText().toString();

        if (pin == null || pin.isEmpty()) {
            Toast.makeText(this, ""Please Enter a valid pin!"", Toast.LENGTH_SHORT).show();
        }",
addPin,pinTxt.getText,AccessControl3Activity.java,unknown,[],High-level (Application),Unknown,Direct,"addPin(View view) {
        SharedPreferences spref = PreferenceManager.getDefaultSharedPreferences(this);
        SharedPreferences.Editor spedit = spref.edit();
        EditText pinTxt = (EditText) findViewById(R.id.aci3Pin);
        String pin = pinTxt.getText().toString();

        if (pin == null || pin.isEmpty()) {
            Toast.makeText(this, ""Please Enter a valid pin!"", Toast.LENGTH_SHORT).show();
        }",
addPin,toString,AccessControl3Activity.java,unknown,[[]],High-level (Application),Unknown,Direct,"addPin(View view) {
        SharedPreferences spref = PreferenceManager.getDefaultSharedPreferences(this);
        SharedPreferences.Editor spedit = spref.edit();
        EditText pinTxt = (EditText) findViewById(R.id.aci3Pin);
        String pin = pinTxt.getText().toString();

        if (pin == null || pin.isEmpty()) {
            Toast.makeText(this, ""Please Enter a valid pin!"", Toast.LENGTH_SHORT).show();
        }",
addPin,pin.isEmpty,AccessControl3Activity.java,unknown,[],High-level (Application),Unknown,Direct,"addPin(View view) {
        SharedPreferences spref = PreferenceManager.getDefaultSharedPreferences(this);
        SharedPreferences.Editor spedit = spref.edit();
        EditText pinTxt = (EditText) findViewById(R.id.aci3Pin);
        String pin = pinTxt.getText().toString();

        if (pin == null || pin.isEmpty()) {
            Toast.makeText(this, ""Please Enter a valid pin!"", Toast.LENGTH_SHORT).show();
        }",
addPin,Toast.makeText,AccessControl3Activity.java,unknown,[],High-level (Application),Unknown,Direct,"addPin(View view) {
        SharedPreferences spref = PreferenceManager.getDefaultSharedPreferences(this);
        SharedPreferences.Editor spedit = spref.edit();
        EditText pinTxt = (EditText) findViewById(R.id.aci3Pin);
        String pin = pinTxt.getText().toString();

        if (pin == null || pin.isEmpty()) {
            Toast.makeText(this, ""Please Enter a valid pin!"", Toast.LENGTH_SHORT).show();
        }",
addPin,show,AccessControl3Activity.java,unknown,"[[], []]",High-level (Application),Unknown,Direct,"addPin(View view) {
        SharedPreferences spref = PreferenceManager.getDefaultSharedPreferences(this);
        SharedPreferences.Editor spedit = spref.edit();
        EditText pinTxt = (EditText) findViewById(R.id.aci3Pin);
        String pin = pinTxt.getText().toString();

        if (pin == null || pin.isEmpty()) {
            Toast.makeText(this, ""Please Enter a valid pin!"", Toast.LENGTH_SHORT).show();
        }",
addPin,findViewById,AccessControl3Activity.java,unknown,"[['aci3Pin'], ['aci3viewbutton']]",High-level (Application),Unknown,Direct,"addPin(View view) {
        SharedPreferences spref = PreferenceManager.getDefaultSharedPreferences(this);
        SharedPreferences.Editor spedit = spref.edit();
        EditText pinTxt = (EditText) findViewById(R.id.aci3Pin);
        String pin = pinTxt.getText().toString();

        if (pin == null || pin.isEmpty()) {
            Toast.makeText(this, ""Please Enter a valid pin!"", Toast.LENGTH_SHORT).show();
        }",
addPin,spedit.putString,AccessControl3Activity.java,unknown,[],High-level (Application),Unknown,Direct,"addPin(View view) {
        SharedPreferences spref = PreferenceManager.getDefaultSharedPreferences(this);
        SharedPreferences.Editor spedit = spref.edit();
        EditText pinTxt = (EditText) findViewById(R.id.aci3Pin);
        String pin = pinTxt.getText().toString();

        if (pin == null || pin.isEmpty()) {
            Toast.makeText(this, ""Please Enter a valid pin!"", Toast.LENGTH_SHORT).show();
        }",
addPin,getString,AccessControl3Activity.java,unknown,[['pkey']],High-level (Application),Unknown,Direct,"addPin(View view) {
        SharedPreferences spref = PreferenceManager.getDefaultSharedPreferences(this);
        SharedPreferences.Editor spedit = spref.edit();
        EditText pinTxt = (EditText) findViewById(R.id.aci3Pin);
        String pin = pinTxt.getText().toString();

        if (pin == null || pin.isEmpty()) {
            Toast.makeText(this, ""Please Enter a valid pin!"", Toast.LENGTH_SHORT).show();
        }",
addPin,spedit.commit,AccessControl3Activity.java,unknown,[],High-level (Application),Unknown,Direct,"addPin(View view) {
        SharedPreferences spref = PreferenceManager.getDefaultSharedPreferences(this);
        SharedPreferences.Editor spedit = spref.edit();
        EditText pinTxt = (EditText) findViewById(R.id.aci3Pin);
        String pin = pinTxt.getText().toString();

        if (pin == null || pin.isEmpty()) {
            Toast.makeText(this, ""Please Enter a valid pin!"", Toast.LENGTH_SHORT).show();
        }",
addPin,vbutton.getVisibility,AccessControl3Activity.java,unknown,[],High-level (Application),Unknown,Direct,"addPin(View view) {
        SharedPreferences spref = PreferenceManager.getDefaultSharedPreferences(this);
        SharedPreferences.Editor spedit = spref.edit();
        EditText pinTxt = (EditText) findViewById(R.id.aci3Pin);
        String pin = pinTxt.getText().toString();

        if (pin == null || pin.isEmpty()) {
            Toast.makeText(this, ""Please Enter a valid pin!"", Toast.LENGTH_SHORT).show();
        }",
addPin,vbutton.setVisibility,AccessControl3Activity.java,unknown,[],High-level (Application),Unknown,Direct,"addPin(View view) {
        SharedPreferences spref = PreferenceManager.getDefaultSharedPreferences(this);
        SharedPreferences.Editor spedit = spref.edit();
        EditText pinTxt = (EditText) findViewById(R.id.aci3Pin);
        String pin = pinTxt.getText().toString();

        if (pin == null || pin.isEmpty()) {
            Toast.makeText(this, ""Please Enter a valid pin!"", Toast.LENGTH_SHORT).show();
        }",
addPin,Toast.makeText,AccessControl3Activity.java,unknown,[],High-level (Application),Unknown,Direct,"addPin(View view) {
        SharedPreferences spref = PreferenceManager.getDefaultSharedPreferences(this);
        SharedPreferences.Editor spedit = spref.edit();
        EditText pinTxt = (EditText) findViewById(R.id.aci3Pin);
        String pin = pinTxt.getText().toString();

        if (pin == null || pin.isEmpty()) {
            Toast.makeText(this, ""Please Enter a valid pin!"", Toast.LENGTH_SHORT).show();
        }",
addPin,show,AccessControl3Activity.java,unknown,"[[], []]",High-level (Application),Unknown,Direct,"addPin(View view) {
        SharedPreferences spref = PreferenceManager.getDefaultSharedPreferences(this);
        SharedPreferences.Editor spedit = spref.edit();
        EditText pinTxt = (EditText) findViewById(R.id.aci3Pin);
        String pin = pinTxt.getText().toString();

        if (pin == null || pin.isEmpty()) {
            Toast.makeText(this, ""Please Enter a valid pin!"", Toast.LENGTH_SHORT).show();
        }",
goToNotes,startActivity,AccessControl3Activity.java,unknown,[['i']],High-level (Application),Unknown,Direct,"goToNotes(View view) {
        Intent i = new Intent(this, AccessControl3NotesActivity.class);
        startActivity(i);
    }",
onCreate,setContentView,LogActivity.java,unknown,[['activity_log']],Mid-level (Logic),Unknown,Direct,"onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_log);
    }",
checkout,findViewById,LogActivity.java,unknown,[['ccText']],High-level (Application),Unknown,Direct,"checkout(View view) {
        EditText cctxt = (EditText) findViewById(R.id.ccText);
        try {
            // Assuming we do some HTTP requests credit card validation and processing
            //Everything seems fine and then we hit some unforseen error
            processCC(cctxt.getText().toString());
        }",
checkout,processCC,LogActivity.java,LogActivity.java,"[['MethodInvocation(arguments=[], member=getText, postfix_operators=[], prefix_operators=[], qualifier=cctxt, selectors=[MethodInvocation(arguments=[], member=toString, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)']]",High-level (Application),Low-level (Utility),Direct,"checkout(View view) {
        EditText cctxt = (EditText) findViewById(R.id.ccText);
        try {
            // Assuming we do some HTTP requests credit card validation and processing
            //Everything seems fine and then we hit some unforseen error
            processCC(cctxt.getText().toString());
        }","processCC(String ccstr) {
        // Do some important processing and throw if there is any error
        RuntimeException e = new RuntimeException();
        throw e;
    }"
checkout,cctxt.getText,LogActivity.java,unknown,[],High-level (Application),Unknown,Direct,"checkout(View view) {
        EditText cctxt = (EditText) findViewById(R.id.ccText);
        try {
            // Assuming we do some HTTP requests credit card validation and processing
            //Everything seems fine and then we hit some unforseen error
            processCC(cctxt.getText().toString());
        }",
checkout,toString,LogActivity.java,unknown,"[[], []]",High-level (Application),Unknown,Direct,"checkout(View view) {
        EditText cctxt = (EditText) findViewById(R.id.ccText);
        try {
            // Assuming we do some HTTP requests credit card validation and processing
            //Everything seems fine and then we hit some unforseen error
            processCC(cctxt.getText().toString());
        }",
checkout,Log.e,LogActivity.java,unknown,[],High-level (Application),Unknown,Direct,"checkout(View view) {
        EditText cctxt = (EditText) findViewById(R.id.ccText);
        try {
            // Assuming we do some HTTP requests credit card validation and processing
            //Everything seems fine and then we hit some unforseen error
            processCC(cctxt.getText().toString());
        }",
checkout,cctxt.getText,LogActivity.java,unknown,[],High-level (Application),Unknown,Direct,"checkout(View view) {
        EditText cctxt = (EditText) findViewById(R.id.ccText);
        try {
            // Assuming we do some HTTP requests credit card validation and processing
            //Everything seems fine and then we hit some unforseen error
            processCC(cctxt.getText().toString());
        }",
checkout,toString,LogActivity.java,unknown,"[[], []]",High-level (Application),Unknown,Direct,"checkout(View view) {
        EditText cctxt = (EditText) findViewById(R.id.ccText);
        try {
            // Assuming we do some HTTP requests credit card validation and processing
            //Everything seems fine and then we hit some unforseen error
            processCC(cctxt.getText().toString());
        }",
checkout,Toast.makeText,LogActivity.java,unknown,[],High-level (Application),Unknown,Direct,"checkout(View view) {
        EditText cctxt = (EditText) findViewById(R.id.ccText);
        try {
            // Assuming we do some HTTP requests credit card validation and processing
            //Everything seems fine and then we hit some unforseen error
            processCC(cctxt.getText().toString());
        }",
checkout,show,LogActivity.java,unknown,[[]],High-level (Application),Unknown,Direct,"checkout(View view) {
        EditText cctxt = (EditText) findViewById(R.id.ccText);
        try {
            // Assuming we do some HTTP requests credit card validation and processing
            //Everything seems fine and then we hit some unforseen error
            processCC(cctxt.getText().toString());
        }",
onCreate,setContentView,AccessControl1Activity.java,unknown,[['activity_access_control1']],Mid-level (Logic),Unknown,Direct,"onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_access_control1);
    }",
viewAPICredentials,i.setAction,AccessControl1Activity.java,unknown,[],High-level (Application),Unknown,Direct,"viewAPICredentials(View view) {
        // Calling implicit intent i.e. with app defined action instead of activity class
        Intent i = new Intent();
        i.setAction(""jakhar.aseem.diva.action.VIEW_CREDS"");
        // Check whether the intent resolves to an activity or not
        if (i.resolveActivity(getPackageManager()) != null){
            startActivity(i);
        }",
viewAPICredentials,i.resolveActivity,AccessControl1Activity.java,unknown,[],High-level (Application),Unknown,Direct,"viewAPICredentials(View view) {
        // Calling implicit intent i.e. with app defined action instead of activity class
        Intent i = new Intent();
        i.setAction(""jakhar.aseem.diva.action.VIEW_CREDS"");
        // Check whether the intent resolves to an activity or not
        if (i.resolveActivity(getPackageManager()) != null){
            startActivity(i);
        }",
viewAPICredentials,getPackageManager,AccessControl1Activity.java,unknown,[[]],High-level (Application),Unknown,Direct,"viewAPICredentials(View view) {
        // Calling implicit intent i.e. with app defined action instead of activity class
        Intent i = new Intent();
        i.setAction(""jakhar.aseem.diva.action.VIEW_CREDS"");
        // Check whether the intent resolves to an activity or not
        if (i.resolveActivity(getPackageManager()) != null){
            startActivity(i);
        }",
viewAPICredentials,startActivity,AccessControl1Activity.java,unknown,[['i']],High-level (Application),Unknown,Direct,"viewAPICredentials(View view) {
        // Calling implicit intent i.e. with app defined action instead of activity class
        Intent i = new Intent();
        i.setAction(""jakhar.aseem.diva.action.VIEW_CREDS"");
        // Check whether the intent resolves to an activity or not
        if (i.resolveActivity(getPackageManager()) != null){
            startActivity(i);
        }",
viewAPICredentials,Toast.makeText,AccessControl1Activity.java,unknown,[],High-level (Application),Unknown,Direct,"viewAPICredentials(View view) {
        // Calling implicit intent i.e. with app defined action instead of activity class
        Intent i = new Intent();
        i.setAction(""jakhar.aseem.diva.action.VIEW_CREDS"");
        // Check whether the intent resolves to an activity or not
        if (i.resolveActivity(getPackageManager()) != null){
            startActivity(i);
        }",
viewAPICredentials,show,AccessControl1Activity.java,unknown,[[]],High-level (Application),Unknown,Direct,"viewAPICredentials(View view) {
        // Calling implicit intent i.e. with app defined action instead of activity class
        Intent i = new Intent();
        i.setAction(""jakhar.aseem.diva.action.VIEW_CREDS"");
        // Check whether the intent resolves to an activity or not
        if (i.resolveActivity(getPackageManager()) != null){
            startActivity(i);
        }",
viewAPICredentials,Log.e,AccessControl1Activity.java,unknown,[],High-level (Application),Unknown,Direct,"viewAPICredentials(View view) {
        // Calling implicit intent i.e. with app defined action instead of activity class
        Intent i = new Intent();
        i.setAction(""jakhar.aseem.diva.action.VIEW_CREDS"");
        // Check whether the intent resolves to an activity or not
        if (i.resolveActivity(getPackageManager()) != null){
            startActivity(i);
        }",
onCreate,getContext,NotesProvider.java,unknown,[[]],Mid-level (Logic),Unknown,Direct,"onCreate(SQLiteDatabase db) {
            db.execSQL(DROP_TBL_QRY);
            db.execSQL(CREATE_TBL_QRY);
            db.execSQL(""INSERT INTO "" + TABLE + ""("" + C_TITLE + "","" + C_NOTE + "") VALUES ('office', '10 Meetings. 5 Calls. Lunch with CEO');"");
            db.execSQL(""INSERT INTO "" + TABLE + ""("" + C_TITLE + "","" + C_NOTE + "") VALUES ('home', 'Buy toys for baby, Order dinner');"");
            db.execSQL(""INSERT INTO "" + TABLE + ""("" + C_TITLE + "","" + C_NOTE + "") VALUES ('holiday', 'Either Goa or Amsterdam');"");
            db.execSQL(""INSERT INTO "" + TABLE + ""("" + C_TITLE + "","" + C_NOTE + "") VALUES ('Expense', 'Spent too much on home theater');"");
            db.execSQL(""INSERT INTO "" + TABLE + ""("" + C_TITLE + "","" + C_NOTE + "") VALUES ('Exercise', 'Alternate days running');"");
            db.execSQL(""INSERT INTO "" + TABLE + ""("" + C_TITLE + "","" + C_NOTE + "") VALUES ('Weekend', 'b333333333333r');"");
        }",
onCreate,dbHelper.getWritableDatabase,NotesProvider.java,unknown,[],Mid-level (Logic),Unknown,Direct,"onCreate(SQLiteDatabase db) {
            db.execSQL(DROP_TBL_QRY);
            db.execSQL(CREATE_TBL_QRY);
            db.execSQL(""INSERT INTO "" + TABLE + ""("" + C_TITLE + "","" + C_NOTE + "") VALUES ('office', '10 Meetings. 5 Calls. Lunch with CEO');"");
            db.execSQL(""INSERT INTO "" + TABLE + ""("" + C_TITLE + "","" + C_NOTE + "") VALUES ('home', 'Buy toys for baby, Order dinner');"");
            db.execSQL(""INSERT INTO "" + TABLE + ""("" + C_TITLE + "","" + C_NOTE + "") VALUES ('holiday', 'Either Goa or Amsterdam');"");
            db.execSQL(""INSERT INTO "" + TABLE + ""("" + C_TITLE + "","" + C_NOTE + "") VALUES ('Expense', 'Spent too much on home theater');"");
            db.execSQL(""INSERT INTO "" + TABLE + ""("" + C_TITLE + "","" + C_NOTE + "") VALUES ('Exercise', 'Alternate days running');"");
            db.execSQL(""INSERT INTO "" + TABLE + ""("" + C_TITLE + "","" + C_NOTE + "") VALUES ('Weekend', 'b333333333333r');"");
        }",
onUpgrade,onCreate,NotesProvider.java,SQLInjectionActivity.java,[['db']],High-level (Application),Mid-level (Logic),Direct,"onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
            onCreate(db);
        }","onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        try {
            mDB = openOrCreateDatabase(""sqli"", MODE_PRIVATE, null);
            mDB.execSQL(""DROP TABLE IF EXISTS sqliuser;"");
            mDB.execSQL(""CREATE TABLE IF NOT EXISTS sqliuser(user VARCHAR, password VARCHAR, credit_card VARCHAR);"");
            mDB.execSQL(""INSERT INTO sqliuser VALUES ('admin', 'passwd123', '1234567812345678');"");
            mDB.execSQL(""INSERT INTO sqliuser VALUES ('diva', 'p@ssword', '1111222233334444');"");
            mDB.execSQL(""INSERT INTO sqliuser VALUES ('john', 'password123', '5555666677778888');"");

        }"
delete,urimatcher.match,NotesProvider.java,unknown,[],High-level (Application),Unknown,Direct,"delete(Uri uri, String selection, String[] selectionArgs) {
        int count = 0;
        switch (urimatcher.match(uri)) {
            case PATH_TABLE:
                // delete all records
                count = mDB.delete(TABLE, selection, selectionArgs);
                break;
            case PATH_ID:
                // delete a single record
                String id = uri.getLastPathSegment();
                count = mDB.delete( TABLE, C_ID +  "" = "" + id +
                (!TextUtils.isEmpty(selection) ? "" AND ("" +
                selection + ')' : """"), selectionArgs);
                break;
            default:
                throw new IllegalArgumentException(""Divanotes(delete): Unsupported URI "" + uri);
        }",
delete,mDB.delete,NotesProvider.java,unknown,[],High-level (Application),Unknown,Direct,"delete(Uri uri, String selection, String[] selectionArgs) {
        int count = 0;
        switch (urimatcher.match(uri)) {
            case PATH_TABLE:
                // delete all records
                count = mDB.delete(TABLE, selection, selectionArgs);
                break;
            case PATH_ID:
                // delete a single record
                String id = uri.getLastPathSegment();
                count = mDB.delete( TABLE, C_ID +  "" = "" + id +
                (!TextUtils.isEmpty(selection) ? "" AND ("" +
                selection + ')' : """"), selectionArgs);
                break;
            default:
                throw new IllegalArgumentException(""Divanotes(delete): Unsupported URI "" + uri);
        }",
delete,uri.getLastPathSegment,NotesProvider.java,unknown,[],High-level (Application),Unknown,Direct,"delete(Uri uri, String selection, String[] selectionArgs) {
        int count = 0;
        switch (urimatcher.match(uri)) {
            case PATH_TABLE:
                // delete all records
                count = mDB.delete(TABLE, selection, selectionArgs);
                break;
            case PATH_ID:
                // delete a single record
                String id = uri.getLastPathSegment();
                count = mDB.delete( TABLE, C_ID +  "" = "" + id +
                (!TextUtils.isEmpty(selection) ? "" AND ("" +
                selection + ')' : """"), selectionArgs);
                break;
            default:
                throw new IllegalArgumentException(""Divanotes(delete): Unsupported URI "" + uri);
        }",
delete,mDB.delete,NotesProvider.java,unknown,[],High-level (Application),Unknown,Direct,"delete(Uri uri, String selection, String[] selectionArgs) {
        int count = 0;
        switch (urimatcher.match(uri)) {
            case PATH_TABLE:
                // delete all records
                count = mDB.delete(TABLE, selection, selectionArgs);
                break;
            case PATH_ID:
                // delete a single record
                String id = uri.getLastPathSegment();
                count = mDB.delete( TABLE, C_ID +  "" = "" + id +
                (!TextUtils.isEmpty(selection) ? "" AND ("" +
                selection + ')' : """"), selectionArgs);
                break;
            default:
                throw new IllegalArgumentException(""Divanotes(delete): Unsupported URI "" + uri);
        }",
delete,TextUtils.isEmpty,NotesProvider.java,unknown,[],High-level (Application),Unknown,Direct,"delete(Uri uri, String selection, String[] selectionArgs) {
        int count = 0;
        switch (urimatcher.match(uri)) {
            case PATH_TABLE:
                // delete all records
                count = mDB.delete(TABLE, selection, selectionArgs);
                break;
            case PATH_ID:
                // delete a single record
                String id = uri.getLastPathSegment();
                count = mDB.delete( TABLE, C_ID +  "" = "" + id +
                (!TextUtils.isEmpty(selection) ? "" AND ("" +
                selection + ')' : """"), selectionArgs);
                break;
            default:
                throw new IllegalArgumentException(""Divanotes(delete): Unsupported URI "" + uri);
        }",
delete,getContext,NotesProvider.java,unknown,[[]],High-level (Application),Unknown,Direct,"delete(Uri uri, String selection, String[] selectionArgs) {
        int count = 0;
        switch (urimatcher.match(uri)) {
            case PATH_TABLE:
                // delete all records
                count = mDB.delete(TABLE, selection, selectionArgs);
                break;
            case PATH_ID:
                // delete a single record
                String id = uri.getLastPathSegment();
                count = mDB.delete( TABLE, C_ID +  "" = "" + id +
                (!TextUtils.isEmpty(selection) ? "" AND ("" +
                selection + ')' : """"), selectionArgs);
                break;
            default:
                throw new IllegalArgumentException(""Divanotes(delete): Unsupported URI "" + uri);
        }",
delete,getContentResolver,NotesProvider.java,unknown,[[]],High-level (Application),Unknown,Direct,"delete(Uri uri, String selection, String[] selectionArgs) {
        int count = 0;
        switch (urimatcher.match(uri)) {
            case PATH_TABLE:
                // delete all records
                count = mDB.delete(TABLE, selection, selectionArgs);
                break;
            case PATH_ID:
                // delete a single record
                String id = uri.getLastPathSegment();
                count = mDB.delete( TABLE, C_ID +  "" = "" + id +
                (!TextUtils.isEmpty(selection) ? "" AND ("" +
                selection + ')' : """"), selectionArgs);
                break;
            default:
                throw new IllegalArgumentException(""Divanotes(delete): Unsupported URI "" + uri);
        }",
delete,notifyChange,NotesProvider.java,unknown,"[['uri', 'null']]",High-level (Application),Unknown,Direct,"delete(Uri uri, String selection, String[] selectionArgs) {
        int count = 0;
        switch (urimatcher.match(uri)) {
            case PATH_TABLE:
                // delete all records
                count = mDB.delete(TABLE, selection, selectionArgs);
                break;
            case PATH_ID:
                // delete a single record
                String id = uri.getLastPathSegment();
                count = mDB.delete( TABLE, C_ID +  "" = "" + id +
                (!TextUtils.isEmpty(selection) ? "" AND ("" +
                selection + ')' : """"), selectionArgs);
                break;
            default:
                throw new IllegalArgumentException(""Divanotes(delete): Unsupported URI "" + uri);
        }",
getType,urimatcher.match,NotesProvider.java,unknown,[],High-level (Application),Unknown,Direct,"getType(Uri uri) {
        switch (urimatcher.match(uri)){
            // Get all notes
            case PATH_TABLE:
                return ""vnd.android.cursor.dir/vnd.jakhar.notes"";
            // Get a single note
            case PATH_ID:
                return ""vnd.android.cursor.item/vnd.jakhar.notes"";
            default:
                throw new IllegalArgumentException(""Divanotes: Unsupported URI: "" + uri);
        }",
insert,mDB.insert,NotesProvider.java,unknown,[],High-level (Application),Unknown,Direct,"insert(Uri uri, ContentValues values) {
        long row = mDB.insert(TABLE, """", values);
        if(row > 0) {
            // Record added
            Uri newUri = ContentUris.withAppendedId(CONTENT_URI, row);
            getContext().getContentResolver().notifyChange(newUri, null);
            return newUri;
        }",
insert,ContentUris.withAppendedId,NotesProvider.java,unknown,[],High-level (Application),Unknown,Direct,"insert(Uri uri, ContentValues values) {
        long row = mDB.insert(TABLE, """", values);
        if(row > 0) {
            // Record added
            Uri newUri = ContentUris.withAppendedId(CONTENT_URI, row);
            getContext().getContentResolver().notifyChange(newUri, null);
            return newUri;
        }",
insert,getContext,NotesProvider.java,unknown,[[]],High-level (Application),Unknown,Direct,"insert(Uri uri, ContentValues values) {
        long row = mDB.insert(TABLE, """", values);
        if(row > 0) {
            // Record added
            Uri newUri = ContentUris.withAppendedId(CONTENT_URI, row);
            getContext().getContentResolver().notifyChange(newUri, null);
            return newUri;
        }",
insert,getContentResolver,NotesProvider.java,unknown,[[]],High-level (Application),Unknown,Direct,"insert(Uri uri, ContentValues values) {
        long row = mDB.insert(TABLE, """", values);
        if(row > 0) {
            // Record added
            Uri newUri = ContentUris.withAppendedId(CONTENT_URI, row);
            getContext().getContentResolver().notifyChange(newUri, null);
            return newUri;
        }",
insert,notifyChange,NotesProvider.java,unknown,"[['newUri', 'null']]",High-level (Application),Unknown,Direct,"insert(Uri uri, ContentValues values) {
        long row = mDB.insert(TABLE, """", values);
        if(row > 0) {
            // Record added
            Uri newUri = ContentUris.withAppendedId(CONTENT_URI, row);
            getContext().getContentResolver().notifyChange(newUri, null);
            return newUri;
        }",
query,queryBuilder.setTables,NotesProvider.java,unknown,[],Mid-level (Logic),Unknown,Direct,"query(Uri uri, String[] projection, String selection,
                        String[] selectionArgs, String sortOrder) {

        SQLiteQueryBuilder queryBuilder = new SQLiteQueryBuilder();

        // The table to query
        queryBuilder.setTables(TABLE);
        switch (urimatcher.match(uri)) {
            // maps all database column names
            case PATH_TABLE:
                break;
            case PATH_ID:
                queryBuilder.appendWhere( C_ID + ""="" + uri.getLastPathSegment());
                break;
            default:
                throw new IllegalArgumentException(""Divanotes(query): Unknown URI "" + uri);
        }",
query,urimatcher.match,NotesProvider.java,unknown,[],Mid-level (Logic),Unknown,Direct,"query(Uri uri, String[] projection, String selection,
                        String[] selectionArgs, String sortOrder) {

        SQLiteQueryBuilder queryBuilder = new SQLiteQueryBuilder();

        // The table to query
        queryBuilder.setTables(TABLE);
        switch (urimatcher.match(uri)) {
            // maps all database column names
            case PATH_TABLE:
                break;
            case PATH_ID:
                queryBuilder.appendWhere( C_ID + ""="" + uri.getLastPathSegment());
                break;
            default:
                throw new IllegalArgumentException(""Divanotes(query): Unknown URI "" + uri);
        }",
query,queryBuilder.appendWhere,NotesProvider.java,unknown,[],Mid-level (Logic),Unknown,Direct,"query(Uri uri, String[] projection, String selection,
                        String[] selectionArgs, String sortOrder) {

        SQLiteQueryBuilder queryBuilder = new SQLiteQueryBuilder();

        // The table to query
        queryBuilder.setTables(TABLE);
        switch (urimatcher.match(uri)) {
            // maps all database column names
            case PATH_TABLE:
                break;
            case PATH_ID:
                queryBuilder.appendWhere( C_ID + ""="" + uri.getLastPathSegment());
                break;
            default:
                throw new IllegalArgumentException(""Divanotes(query): Unknown URI "" + uri);
        }",
query,uri.getLastPathSegment,NotesProvider.java,unknown,[],Mid-level (Logic),Unknown,Direct,"query(Uri uri, String[] projection, String selection,
                        String[] selectionArgs, String sortOrder) {

        SQLiteQueryBuilder queryBuilder = new SQLiteQueryBuilder();

        // The table to query
        queryBuilder.setTables(TABLE);
        switch (urimatcher.match(uri)) {
            // maps all database column names
            case PATH_TABLE:
                break;
            case PATH_ID:
                queryBuilder.appendWhere( C_ID + ""="" + uri.getLastPathSegment());
                break;
            default:
                throw new IllegalArgumentException(""Divanotes(query): Unknown URI "" + uri);
        }",
query,queryBuilder.query,NotesProvider.java,unknown,[],Mid-level (Logic),Unknown,Direct,"query(Uri uri, String[] projection, String selection,
                        String[] selectionArgs, String sortOrder) {

        SQLiteQueryBuilder queryBuilder = new SQLiteQueryBuilder();

        // The table to query
        queryBuilder.setTables(TABLE);
        switch (urimatcher.match(uri)) {
            // maps all database column names
            case PATH_TABLE:
                break;
            case PATH_ID:
                queryBuilder.appendWhere( C_ID + ""="" + uri.getLastPathSegment());
                break;
            default:
                throw new IllegalArgumentException(""Divanotes(query): Unknown URI "" + uri);
        }",
query,cursor.setNotificationUri,NotesProvider.java,unknown,[],Mid-level (Logic),Unknown,Direct,"query(Uri uri, String[] projection, String selection,
                        String[] selectionArgs, String sortOrder) {

        SQLiteQueryBuilder queryBuilder = new SQLiteQueryBuilder();

        // The table to query
        queryBuilder.setTables(TABLE);
        switch (urimatcher.match(uri)) {
            // maps all database column names
            case PATH_TABLE:
                break;
            case PATH_ID:
                queryBuilder.appendWhere( C_ID + ""="" + uri.getLastPathSegment());
                break;
            default:
                throw new IllegalArgumentException(""Divanotes(query): Unknown URI "" + uri);
        }",
query,getContext,NotesProvider.java,unknown,[[]],Mid-level (Logic),Unknown,Direct,"query(Uri uri, String[] projection, String selection,
                        String[] selectionArgs, String sortOrder) {

        SQLiteQueryBuilder queryBuilder = new SQLiteQueryBuilder();

        // The table to query
        queryBuilder.setTables(TABLE);
        switch (urimatcher.match(uri)) {
            // maps all database column names
            case PATH_TABLE:
                break;
            case PATH_ID:
                queryBuilder.appendWhere( C_ID + ""="" + uri.getLastPathSegment());
                break;
            default:
                throw new IllegalArgumentException(""Divanotes(query): Unknown URI "" + uri);
        }",
query,getContentResolver,NotesProvider.java,unknown,[[]],Mid-level (Logic),Unknown,Direct,"query(Uri uri, String[] projection, String selection,
                        String[] selectionArgs, String sortOrder) {

        SQLiteQueryBuilder queryBuilder = new SQLiteQueryBuilder();

        // The table to query
        queryBuilder.setTables(TABLE);
        switch (urimatcher.match(uri)) {
            // maps all database column names
            case PATH_TABLE:
                break;
            case PATH_ID:
                queryBuilder.appendWhere( C_ID + ""="" + uri.getLastPathSegment());
                break;
            default:
                throw new IllegalArgumentException(""Divanotes(query): Unknown URI "" + uri);
        }",
update,urimatcher.match,NotesProvider.java,unknown,[],High-level (Application),Unknown,Direct,"update(Uri uri, ContentValues values, String selection,
                      String[] selectionArgs) {
        int count = 0;

        switch (urimatcher.match(uri)) {
            case PATH_TABLE:
                count = mDB.update(TABLE, values, selection, selectionArgs);
                break;
            case PATH_ID:
                count = mDB.update(TABLE, values, C_ID +
                        "" = "" + uri.getLastPathSegment() +
                (!TextUtils.isEmpty(selection) ? "" AND ("" +
                selection + ')' : """"), selectionArgs);
                break;
            default:
                throw new IllegalArgumentException(""Divanotes(update): Unsupported URI "" + uri );
        }",
update,mDB.update,NotesProvider.java,unknown,[],High-level (Application),Unknown,Direct,"update(Uri uri, ContentValues values, String selection,
                      String[] selectionArgs) {
        int count = 0;

        switch (urimatcher.match(uri)) {
            case PATH_TABLE:
                count = mDB.update(TABLE, values, selection, selectionArgs);
                break;
            case PATH_ID:
                count = mDB.update(TABLE, values, C_ID +
                        "" = "" + uri.getLastPathSegment() +
                (!TextUtils.isEmpty(selection) ? "" AND ("" +
                selection + ')' : """"), selectionArgs);
                break;
            default:
                throw new IllegalArgumentException(""Divanotes(update): Unsupported URI "" + uri );
        }",
update,mDB.update,NotesProvider.java,unknown,[],High-level (Application),Unknown,Direct,"update(Uri uri, ContentValues values, String selection,
                      String[] selectionArgs) {
        int count = 0;

        switch (urimatcher.match(uri)) {
            case PATH_TABLE:
                count = mDB.update(TABLE, values, selection, selectionArgs);
                break;
            case PATH_ID:
                count = mDB.update(TABLE, values, C_ID +
                        "" = "" + uri.getLastPathSegment() +
                (!TextUtils.isEmpty(selection) ? "" AND ("" +
                selection + ')' : """"), selectionArgs);
                break;
            default:
                throw new IllegalArgumentException(""Divanotes(update): Unsupported URI "" + uri );
        }",
update,uri.getLastPathSegment,NotesProvider.java,unknown,[],High-level (Application),Unknown,Direct,"update(Uri uri, ContentValues values, String selection,
                      String[] selectionArgs) {
        int count = 0;

        switch (urimatcher.match(uri)) {
            case PATH_TABLE:
                count = mDB.update(TABLE, values, selection, selectionArgs);
                break;
            case PATH_ID:
                count = mDB.update(TABLE, values, C_ID +
                        "" = "" + uri.getLastPathSegment() +
                (!TextUtils.isEmpty(selection) ? "" AND ("" +
                selection + ')' : """"), selectionArgs);
                break;
            default:
                throw new IllegalArgumentException(""Divanotes(update): Unsupported URI "" + uri );
        }",
update,TextUtils.isEmpty,NotesProvider.java,unknown,[],High-level (Application),Unknown,Direct,"update(Uri uri, ContentValues values, String selection,
                      String[] selectionArgs) {
        int count = 0;

        switch (urimatcher.match(uri)) {
            case PATH_TABLE:
                count = mDB.update(TABLE, values, selection, selectionArgs);
                break;
            case PATH_ID:
                count = mDB.update(TABLE, values, C_ID +
                        "" = "" + uri.getLastPathSegment() +
                (!TextUtils.isEmpty(selection) ? "" AND ("" +
                selection + ')' : """"), selectionArgs);
                break;
            default:
                throw new IllegalArgumentException(""Divanotes(update): Unsupported URI "" + uri );
        }",
update,getContext,NotesProvider.java,unknown,[[]],High-level (Application),Unknown,Direct,"update(Uri uri, ContentValues values, String selection,
                      String[] selectionArgs) {
        int count = 0;

        switch (urimatcher.match(uri)) {
            case PATH_TABLE:
                count = mDB.update(TABLE, values, selection, selectionArgs);
                break;
            case PATH_ID:
                count = mDB.update(TABLE, values, C_ID +
                        "" = "" + uri.getLastPathSegment() +
                (!TextUtils.isEmpty(selection) ? "" AND ("" +
                selection + ')' : """"), selectionArgs);
                break;
            default:
                throw new IllegalArgumentException(""Divanotes(update): Unsupported URI "" + uri );
        }",
update,getContentResolver,NotesProvider.java,unknown,[[]],High-level (Application),Unknown,Direct,"update(Uri uri, ContentValues values, String selection,
                      String[] selectionArgs) {
        int count = 0;

        switch (urimatcher.match(uri)) {
            case PATH_TABLE:
                count = mDB.update(TABLE, values, selection, selectionArgs);
                break;
            case PATH_ID:
                count = mDB.update(TABLE, values, C_ID +
                        "" = "" + uri.getLastPathSegment() +
                (!TextUtils.isEmpty(selection) ? "" AND ("" +
                selection + ')' : """"), selectionArgs);
                break;
            default:
                throw new IllegalArgumentException(""Divanotes(update): Unsupported URI "" + uri );
        }",
update,notifyChange,NotesProvider.java,unknown,"[['uri', 'null']]",High-level (Application),Unknown,Direct,"update(Uri uri, ContentValues values, String selection,
                      String[] selectionArgs) {
        int count = 0;

        switch (urimatcher.match(uri)) {
            case PATH_TABLE:
                count = mDB.update(TABLE, values, selection, selectionArgs);
                break;
            case PATH_ID:
                count = mDB.update(TABLE, values, C_ID +
                        "" = "" + uri.getLastPathSegment() +
                (!TextUtils.isEmpty(selection) ? "" AND ("" +
                selection + ')' : """"), selectionArgs);
                break;
            default:
                throw new IllegalArgumentException(""Divanotes(update): Unsupported URI "" + uri );
        }",
onCreate,setContentView,AccessControl3NotesActivity.java,unknown,[['activity_access_control3_notes']],Mid-level (Logic),Unknown,Direct,"onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_access_control3_notes);
    }",
accessNotes,findViewById,AccessControl3NotesActivity.java,unknown,"[['aci3notesPinText'], ['aci3naccessbutton'], ['aci3nlistView']]",High-level (Application),Unknown,Direct,"accessNotes(View view) {
        EditText pinTxt = (EditText) findViewById(R.id.aci3notesPinText);
        Button abutton = (Button) findViewById(R.id.aci3naccessbutton);
        SharedPreferences spref = PreferenceManager.getDefaultSharedPreferences(this);
        String pin = spref.getString(getString(R.string.pkey), """");
        String userpin = pinTxt.getText().toString();

        // XXX Easter Egg?
        if (userpin.equals(pin)) {
            // Display the private notes
            ListView  lview = (ListView) findViewById(R.id.aci3nlistView);
            Cursor cr = getContentResolver().query(NotesProvider.CONTENT_URI, new String[] {""_id"", ""title"", ""note""}",
accessNotes,findViewById,AccessControl3NotesActivity.java,unknown,"[['aci3notesPinText'], ['aci3naccessbutton'], ['aci3nlistView']]",High-level (Application),Unknown,Direct,"accessNotes(View view) {
        EditText pinTxt = (EditText) findViewById(R.id.aci3notesPinText);
        Button abutton = (Button) findViewById(R.id.aci3naccessbutton);
        SharedPreferences spref = PreferenceManager.getDefaultSharedPreferences(this);
        String pin = spref.getString(getString(R.string.pkey), """");
        String userpin = pinTxt.getText().toString();

        // XXX Easter Egg?
        if (userpin.equals(pin)) {
            // Display the private notes
            ListView  lview = (ListView) findViewById(R.id.aci3nlistView);
            Cursor cr = getContentResolver().query(NotesProvider.CONTENT_URI, new String[] {""_id"", ""title"", ""note""}",
accessNotes,PreferenceManager.getDefaultSharedPreferences,AccessControl3NotesActivity.java,unknown,[],High-level (Application),Unknown,Direct,"accessNotes(View view) {
        EditText pinTxt = (EditText) findViewById(R.id.aci3notesPinText);
        Button abutton = (Button) findViewById(R.id.aci3naccessbutton);
        SharedPreferences spref = PreferenceManager.getDefaultSharedPreferences(this);
        String pin = spref.getString(getString(R.string.pkey), """");
        String userpin = pinTxt.getText().toString();

        // XXX Easter Egg?
        if (userpin.equals(pin)) {
            // Display the private notes
            ListView  lview = (ListView) findViewById(R.id.aci3nlistView);
            Cursor cr = getContentResolver().query(NotesProvider.CONTENT_URI, new String[] {""_id"", ""title"", ""note""}",
accessNotes,spref.getString,AccessControl3NotesActivity.java,unknown,[],High-level (Application),Unknown,Direct,"accessNotes(View view) {
        EditText pinTxt = (EditText) findViewById(R.id.aci3notesPinText);
        Button abutton = (Button) findViewById(R.id.aci3naccessbutton);
        SharedPreferences spref = PreferenceManager.getDefaultSharedPreferences(this);
        String pin = spref.getString(getString(R.string.pkey), """");
        String userpin = pinTxt.getText().toString();

        // XXX Easter Egg?
        if (userpin.equals(pin)) {
            // Display the private notes
            ListView  lview = (ListView) findViewById(R.id.aci3nlistView);
            Cursor cr = getContentResolver().query(NotesProvider.CONTENT_URI, new String[] {""_id"", ""title"", ""note""}",
accessNotes,getString,AccessControl3NotesActivity.java,unknown,"[['MethodInvocation(arguments=[MemberReference(member=pkey, postfix_operators=[], prefix_operators=[], qualifier=R.string, selectors=[])], member=getString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)', '""""'], ['pkey']]",High-level (Application),Unknown,Direct,"accessNotes(View view) {
        EditText pinTxt = (EditText) findViewById(R.id.aci3notesPinText);
        Button abutton = (Button) findViewById(R.id.aci3naccessbutton);
        SharedPreferences spref = PreferenceManager.getDefaultSharedPreferences(this);
        String pin = spref.getString(getString(R.string.pkey), """");
        String userpin = pinTxt.getText().toString();

        // XXX Easter Egg?
        if (userpin.equals(pin)) {
            // Display the private notes
            ListView  lview = (ListView) findViewById(R.id.aci3nlistView);
            Cursor cr = getContentResolver().query(NotesProvider.CONTENT_URI, new String[] {""_id"", ""title"", ""note""}",
accessNotes,pinTxt.getText,AccessControl3NotesActivity.java,unknown,[],High-level (Application),Unknown,Direct,"accessNotes(View view) {
        EditText pinTxt = (EditText) findViewById(R.id.aci3notesPinText);
        Button abutton = (Button) findViewById(R.id.aci3naccessbutton);
        SharedPreferences spref = PreferenceManager.getDefaultSharedPreferences(this);
        String pin = spref.getString(getString(R.string.pkey), """");
        String userpin = pinTxt.getText().toString();

        // XXX Easter Egg?
        if (userpin.equals(pin)) {
            // Display the private notes
            ListView  lview = (ListView) findViewById(R.id.aci3nlistView);
            Cursor cr = getContentResolver().query(NotesProvider.CONTENT_URI, new String[] {""_id"", ""title"", ""note""}",
accessNotes,toString,AccessControl3NotesActivity.java,unknown,[[]],High-level (Application),Unknown,Direct,"accessNotes(View view) {
        EditText pinTxt = (EditText) findViewById(R.id.aci3notesPinText);
        Button abutton = (Button) findViewById(R.id.aci3naccessbutton);
        SharedPreferences spref = PreferenceManager.getDefaultSharedPreferences(this);
        String pin = spref.getString(getString(R.string.pkey), """");
        String userpin = pinTxt.getText().toString();

        // XXX Easter Egg?
        if (userpin.equals(pin)) {
            // Display the private notes
            ListView  lview = (ListView) findViewById(R.id.aci3nlistView);
            Cursor cr = getContentResolver().query(NotesProvider.CONTENT_URI, new String[] {""_id"", ""title"", ""note""}",
accessNotes,userpin.equals,AccessControl3NotesActivity.java,unknown,[],High-level (Application),Unknown,Direct,"accessNotes(View view) {
        EditText pinTxt = (EditText) findViewById(R.id.aci3notesPinText);
        Button abutton = (Button) findViewById(R.id.aci3naccessbutton);
        SharedPreferences spref = PreferenceManager.getDefaultSharedPreferences(this);
        String pin = spref.getString(getString(R.string.pkey), """");
        String userpin = pinTxt.getText().toString();

        // XXX Easter Egg?
        if (userpin.equals(pin)) {
            // Display the private notes
            ListView  lview = (ListView) findViewById(R.id.aci3nlistView);
            Cursor cr = getContentResolver().query(NotesProvider.CONTENT_URI, new String[] {""_id"", ""title"", ""note""}",
accessNotes,findViewById,AccessControl3NotesActivity.java,unknown,"[['aci3notesPinText'], ['aci3naccessbutton'], ['aci3nlistView']]",High-level (Application),Unknown,Direct,"accessNotes(View view) {
        EditText pinTxt = (EditText) findViewById(R.id.aci3notesPinText);
        Button abutton = (Button) findViewById(R.id.aci3naccessbutton);
        SharedPreferences spref = PreferenceManager.getDefaultSharedPreferences(this);
        String pin = spref.getString(getString(R.string.pkey), """");
        String userpin = pinTxt.getText().toString();

        // XXX Easter Egg?
        if (userpin.equals(pin)) {
            // Display the private notes
            ListView  lview = (ListView) findViewById(R.id.aci3nlistView);
            Cursor cr = getContentResolver().query(NotesProvider.CONTENT_URI, new String[] {""_id"", ""title"", ""note""}",
accessNotes,getContentResolver,AccessControl3NotesActivity.java,unknown,[[]],High-level (Application),Unknown,Direct,"accessNotes(View view) {
        EditText pinTxt = (EditText) findViewById(R.id.aci3notesPinText);
        Button abutton = (Button) findViewById(R.id.aci3naccessbutton);
        SharedPreferences spref = PreferenceManager.getDefaultSharedPreferences(this);
        String pin = spref.getString(getString(R.string.pkey), """");
        String userpin = pinTxt.getText().toString();

        // XXX Easter Egg?
        if (userpin.equals(pin)) {
            // Display the private notes
            ListView  lview = (ListView) findViewById(R.id.aci3nlistView);
            Cursor cr = getContentResolver().query(NotesProvider.CONTENT_URI, new String[] {""_id"", ""title"", ""note""}",
accessNotes,query,AccessControl3NotesActivity.java,NotesProvider.java,"[['CONTENT_URI', 'ArrayCreator(dimensions=[None], initializer=ArrayInitializer(initializers=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=""_id""), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=""title""), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=""note"")]), postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=String, sub_type=None))', 'null', 'null', 'null']]",High-level (Application),Mid-level (Logic),Direct,"accessNotes(View view) {
        EditText pinTxt = (EditText) findViewById(R.id.aci3notesPinText);
        Button abutton = (Button) findViewById(R.id.aci3naccessbutton);
        SharedPreferences spref = PreferenceManager.getDefaultSharedPreferences(this);
        String pin = spref.getString(getString(R.string.pkey), """");
        String userpin = pinTxt.getText().toString();

        // XXX Easter Egg?
        if (userpin.equals(pin)) {
            // Display the private notes
            ListView  lview = (ListView) findViewById(R.id.aci3nlistView);
            Cursor cr = getContentResolver().query(NotesProvider.CONTENT_URI, new String[] {""_id"", ""title"", ""note""}","query(Uri uri, String[] projection, String selection,
                        String[] selectionArgs, String sortOrder) {

        SQLiteQueryBuilder queryBuilder = new SQLiteQueryBuilder();

        // The table to query
        queryBuilder.setTables(TABLE);
        switch (urimatcher.match(uri)) {
            // maps all database column names
            case PATH_TABLE:
                break;
            case PATH_ID:
                queryBuilder.appendWhere( C_ID + ""="" + uri.getLastPathSegment());
                break;
            default:
                throw new IllegalArgumentException(""Divanotes(query): Unknown URI "" + uri);
        }"
accessNotes,lview.setAdapter,AccessControl3NotesActivity.java,unknown,[],High-level (Application),Unknown,Direct,"accessNotes(View view) {
        EditText pinTxt = (EditText) findViewById(R.id.aci3notesPinText);
        Button abutton = (Button) findViewById(R.id.aci3naccessbutton);
        SharedPreferences spref = PreferenceManager.getDefaultSharedPreferences(this);
        String pin = spref.getString(getString(R.string.pkey), """");
        String userpin = pinTxt.getText().toString();

        // XXX Easter Egg?
        if (userpin.equals(pin)) {
            // Display the private notes
            ListView  lview = (ListView) findViewById(R.id.aci3nlistView);
            Cursor cr = getContentResolver().query(NotesProvider.CONTENT_URI, new String[] {""_id"", ""title"", ""note""}",
accessNotes,pinTxt.setVisibility,AccessControl3NotesActivity.java,unknown,[],High-level (Application),Unknown,Direct,"accessNotes(View view) {
        EditText pinTxt = (EditText) findViewById(R.id.aci3notesPinText);
        Button abutton = (Button) findViewById(R.id.aci3naccessbutton);
        SharedPreferences spref = PreferenceManager.getDefaultSharedPreferences(this);
        String pin = spref.getString(getString(R.string.pkey), """");
        String userpin = pinTxt.getText().toString();

        // XXX Easter Egg?
        if (userpin.equals(pin)) {
            // Display the private notes
            ListView  lview = (ListView) findViewById(R.id.aci3nlistView);
            Cursor cr = getContentResolver().query(NotesProvider.CONTENT_URI, new String[] {""_id"", ""title"", ""note""}",
accessNotes,abutton.setVisibility,AccessControl3NotesActivity.java,unknown,[],High-level (Application),Unknown,Direct,"accessNotes(View view) {
        EditText pinTxt = (EditText) findViewById(R.id.aci3notesPinText);
        Button abutton = (Button) findViewById(R.id.aci3naccessbutton);
        SharedPreferences spref = PreferenceManager.getDefaultSharedPreferences(this);
        String pin = spref.getString(getString(R.string.pkey), """");
        String userpin = pinTxt.getText().toString();

        // XXX Easter Egg?
        if (userpin.equals(pin)) {
            // Display the private notes
            ListView  lview = (ListView) findViewById(R.id.aci3nlistView);
            Cursor cr = getContentResolver().query(NotesProvider.CONTENT_URI, new String[] {""_id"", ""title"", ""note""}",
accessNotes,Toast.makeText,AccessControl3NotesActivity.java,unknown,[],High-level (Application),Unknown,Direct,"accessNotes(View view) {
        EditText pinTxt = (EditText) findViewById(R.id.aci3notesPinText);
        Button abutton = (Button) findViewById(R.id.aci3naccessbutton);
        SharedPreferences spref = PreferenceManager.getDefaultSharedPreferences(this);
        String pin = spref.getString(getString(R.string.pkey), """");
        String userpin = pinTxt.getText().toString();

        // XXX Easter Egg?
        if (userpin.equals(pin)) {
            // Display the private notes
            ListView  lview = (ListView) findViewById(R.id.aci3nlistView);
            Cursor cr = getContentResolver().query(NotesProvider.CONTENT_URI, new String[] {""_id"", ""title"", ""note""}",
accessNotes,show,AccessControl3NotesActivity.java,unknown,[[]],High-level (Application),Unknown,Direct,"accessNotes(View view) {
        EditText pinTxt = (EditText) findViewById(R.id.aci3notesPinText);
        Button abutton = (Button) findViewById(R.id.aci3naccessbutton);
        SharedPreferences spref = PreferenceManager.getDefaultSharedPreferences(this);
        String pin = spref.getString(getString(R.string.pkey), """");
        String userpin = pinTxt.getText().toString();

        // XXX Easter Egg?
        if (userpin.equals(pin)) {
            // Display the private notes
            ListView  lview = (ListView) findViewById(R.id.aci3nlistView);
            Cursor cr = getContentResolver().query(NotesProvider.CONTENT_URI, new String[] {""_id"", ""title"", ""note""}",
onCreate,setContentView,InputValidation3Activity.java,unknown,[['activity_input_validation3']],Mid-level (Logic),Unknown,Direct,"onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_input_validation3);

        djni = new DivaJni();
    }",
push,findViewById,InputValidation3Activity.java,unknown,[['ivi3CodeText']],High-level (Application),Unknown,Direct,"push(View view) {
        EditText cTxt = (EditText) findViewById(R.id.ivi3CodeText);

        if (djni.initiateLaunchSequence(cTxt.getText().toString()) != 0) {
            Toast.makeText(this, ""Launching in T - 10 ..."", Toast.LENGTH_SHORT).show();
        }",
push,djni.initiateLaunchSequence,InputValidation3Activity.java,unknown,[],High-level (Application),Unknown,Direct,"push(View view) {
        EditText cTxt = (EditText) findViewById(R.id.ivi3CodeText);

        if (djni.initiateLaunchSequence(cTxt.getText().toString()) != 0) {
            Toast.makeText(this, ""Launching in T - 10 ..."", Toast.LENGTH_SHORT).show();
        }",
push,cTxt.getText,InputValidation3Activity.java,unknown,[],High-level (Application),Unknown,Direct,"push(View view) {
        EditText cTxt = (EditText) findViewById(R.id.ivi3CodeText);

        if (djni.initiateLaunchSequence(cTxt.getText().toString()) != 0) {
            Toast.makeText(this, ""Launching in T - 10 ..."", Toast.LENGTH_SHORT).show();
        }",
push,toString,InputValidation3Activity.java,unknown,[[]],High-level (Application),Unknown,Direct,"push(View view) {
        EditText cTxt = (EditText) findViewById(R.id.ivi3CodeText);

        if (djni.initiateLaunchSequence(cTxt.getText().toString()) != 0) {
            Toast.makeText(this, ""Launching in T - 10 ..."", Toast.LENGTH_SHORT).show();
        }",
push,Toast.makeText,InputValidation3Activity.java,unknown,[],High-level (Application),Unknown,Direct,"push(View view) {
        EditText cTxt = (EditText) findViewById(R.id.ivi3CodeText);

        if (djni.initiateLaunchSequence(cTxt.getText().toString()) != 0) {
            Toast.makeText(this, ""Launching in T - 10 ..."", Toast.LENGTH_SHORT).show();
        }",
push,show,InputValidation3Activity.java,unknown,"[[], []]",High-level (Application),Unknown,Direct,"push(View view) {
        EditText cTxt = (EditText) findViewById(R.id.ivi3CodeText);

        if (djni.initiateLaunchSequence(cTxt.getText().toString()) != 0) {
            Toast.makeText(this, ""Launching in T - 10 ..."", Toast.LENGTH_SHORT).show();
        }",
push,Toast.makeText,InputValidation3Activity.java,unknown,[],High-level (Application),Unknown,Direct,"push(View view) {
        EditText cTxt = (EditText) findViewById(R.id.ivi3CodeText);

        if (djni.initiateLaunchSequence(cTxt.getText().toString()) != 0) {
            Toast.makeText(this, ""Launching in T - 10 ..."", Toast.LENGTH_SHORT).show();
        }",
push,show,InputValidation3Activity.java,unknown,"[[], []]",High-level (Application),Unknown,Direct,"push(View view) {
        EditText cTxt = (EditText) findViewById(R.id.ivi3CodeText);

        if (djni.initiateLaunchSequence(cTxt.getText().toString()) != 0) {
            Toast.makeText(this, ""Launching in T - 10 ..."", Toast.LENGTH_SHORT).show();
        }",
onCreate,setContentView,APICredsActivity.java,unknown,[['activity_apicreds']],Mid-level (Logic),Unknown,Direct,"onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_apicreds);
        TextView apicview = (TextView) findViewById(R.id.apicTextView);
        // Connect to vendor cloud
        // Get API credentials and other confidential details of the user
        String apidetails = ""API Key: 123secretapikey123\nAPI User name: diva\nAPI Password: p@ssword"";

         // Display the details on the app
        apicview.setText(apidetails);
    }",
onCreate,findViewById,APICredsActivity.java,unknown,[['apicTextView']],Mid-level (Logic),Unknown,Direct,"onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_apicreds);
        TextView apicview = (TextView) findViewById(R.id.apicTextView);
        // Connect to vendor cloud
        // Get API credentials and other confidential details of the user
        String apidetails = ""API Key: 123secretapikey123\nAPI User name: diva\nAPI Password: p@ssword"";

         // Display the details on the app
        apicview.setText(apidetails);
    }",
onCreate,apicview.setText,APICredsActivity.java,unknown,[],Mid-level (Logic),Unknown,Direct,"onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_apicreds);
        TextView apicview = (TextView) findViewById(R.id.apicTextView);
        // Connect to vendor cloud
        // Get API credentials and other confidential details of the user
        String apidetails = ""API Key: 123secretapikey123\nAPI User name: diva\nAPI Password: p@ssword"";

         // Display the details on the app
        apicview.setText(apidetails);
    }",
onCreate,setContentView,HardcodeActivity.java,unknown,[['activity_hardcode']],Mid-level (Logic),Unknown,Direct,"onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_hardcode);
    }",
access,findViewById,HardcodeActivity.java,unknown,[['hcKey']],High-level (Application),Unknown,Direct,"access(View view) {
        EditText hckey = (EditText) findViewById(R.id.hcKey);

        if (hckey.getText().toString().equals(""vendorsecretkey"")) {
            Toast.makeText(this, ""Access granted! See you on the other side :)"", Toast.LENGTH_SHORT).show();
        }",
access,hckey.getText,HardcodeActivity.java,unknown,[],High-level (Application),Unknown,Direct,"access(View view) {
        EditText hckey = (EditText) findViewById(R.id.hcKey);

        if (hckey.getText().toString().equals(""vendorsecretkey"")) {
            Toast.makeText(this, ""Access granted! See you on the other side :)"", Toast.LENGTH_SHORT).show();
        }",
access,toString,HardcodeActivity.java,unknown,[[]],High-level (Application),Unknown,Direct,"access(View view) {
        EditText hckey = (EditText) findViewById(R.id.hcKey);

        if (hckey.getText().toString().equals(""vendorsecretkey"")) {
            Toast.makeText(this, ""Access granted! See you on the other side :)"", Toast.LENGTH_SHORT).show();
        }",
access,equals,HardcodeActivity.java,unknown,"[['""vendorsecretkey""']]",High-level (Application),Unknown,Direct,"access(View view) {
        EditText hckey = (EditText) findViewById(R.id.hcKey);

        if (hckey.getText().toString().equals(""vendorsecretkey"")) {
            Toast.makeText(this, ""Access granted! See you on the other side :)"", Toast.LENGTH_SHORT).show();
        }",
access,Toast.makeText,HardcodeActivity.java,unknown,[],High-level (Application),Unknown,Direct,"access(View view) {
        EditText hckey = (EditText) findViewById(R.id.hcKey);

        if (hckey.getText().toString().equals(""vendorsecretkey"")) {
            Toast.makeText(this, ""Access granted! See you on the other side :)"", Toast.LENGTH_SHORT).show();
        }",
access,show,HardcodeActivity.java,unknown,"[[], []]",High-level (Application),Unknown,Direct,"access(View view) {
        EditText hckey = (EditText) findViewById(R.id.hcKey);

        if (hckey.getText().toString().equals(""vendorsecretkey"")) {
            Toast.makeText(this, ""Access granted! See you on the other side :)"", Toast.LENGTH_SHORT).show();
        }",
access,Toast.makeText,HardcodeActivity.java,unknown,[],High-level (Application),Unknown,Direct,"access(View view) {
        EditText hckey = (EditText) findViewById(R.id.hcKey);

        if (hckey.getText().toString().equals(""vendorsecretkey"")) {
            Toast.makeText(this, ""Access granted! See you on the other side :)"", Toast.LENGTH_SHORT).show();
        }",
access,show,HardcodeActivity.java,unknown,"[[], []]",High-level (Application),Unknown,Direct,"access(View view) {
        EditText hckey = (EditText) findViewById(R.id.hcKey);

        if (hckey.getText().toString().equals(""vendorsecretkey"")) {
            Toast.makeText(this, ""Access granted! See you on the other side :)"", Toast.LENGTH_SHORT).show();
        }",
onCreate,setContentView,APICreds2Activity.java,unknown,[['activity_apicreds2']],Mid-level (Logic),Unknown,Direct,"onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_apicreds2);
        TextView apicview = (TextView) findViewById(R.id.apic2TextView);
        EditText pintext  = (EditText) findViewById(R.id.aci2pinText);
        Button  vbutton   = (Button) findViewById(R.id.aci2button);
        Intent i = getIntent();
        boolean bcheck = i.getBooleanExtra(getString(R.string.chk_pin), true);

        if (bcheck == false) {
            // Connect to vendor cloud and send User PIN
            // Get API credentials and other confidential details of the user
            String apidetails = ""TVEETER API Key: secrettveeterapikey\nAPI User name: diva2\nAPI Password: p@ssword2"";
            // Display the details on the app
            apicview.setText(apidetails);
        }",
onCreate,findViewById,APICreds2Activity.java,unknown,"[['apic2TextView'], ['aci2pinText'], ['aci2button']]",Mid-level (Logic),Unknown,Direct,"onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_apicreds2);
        TextView apicview = (TextView) findViewById(R.id.apic2TextView);
        EditText pintext  = (EditText) findViewById(R.id.aci2pinText);
        Button  vbutton   = (Button) findViewById(R.id.aci2button);
        Intent i = getIntent();
        boolean bcheck = i.getBooleanExtra(getString(R.string.chk_pin), true);

        if (bcheck == false) {
            // Connect to vendor cloud and send User PIN
            // Get API credentials and other confidential details of the user
            String apidetails = ""TVEETER API Key: secrettveeterapikey\nAPI User name: diva2\nAPI Password: p@ssword2"";
            // Display the details on the app
            apicview.setText(apidetails);
        }",
onCreate,findViewById,APICreds2Activity.java,unknown,"[['apic2TextView'], ['aci2pinText'], ['aci2button']]",Mid-level (Logic),Unknown,Direct,"onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_apicreds2);
        TextView apicview = (TextView) findViewById(R.id.apic2TextView);
        EditText pintext  = (EditText) findViewById(R.id.aci2pinText);
        Button  vbutton   = (Button) findViewById(R.id.aci2button);
        Intent i = getIntent();
        boolean bcheck = i.getBooleanExtra(getString(R.string.chk_pin), true);

        if (bcheck == false) {
            // Connect to vendor cloud and send User PIN
            // Get API credentials and other confidential details of the user
            String apidetails = ""TVEETER API Key: secrettveeterapikey\nAPI User name: diva2\nAPI Password: p@ssword2"";
            // Display the details on the app
            apicview.setText(apidetails);
        }",
onCreate,findViewById,APICreds2Activity.java,unknown,"[['apic2TextView'], ['aci2pinText'], ['aci2button']]",Mid-level (Logic),Unknown,Direct,"onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_apicreds2);
        TextView apicview = (TextView) findViewById(R.id.apic2TextView);
        EditText pintext  = (EditText) findViewById(R.id.aci2pinText);
        Button  vbutton   = (Button) findViewById(R.id.aci2button);
        Intent i = getIntent();
        boolean bcheck = i.getBooleanExtra(getString(R.string.chk_pin), true);

        if (bcheck == false) {
            // Connect to vendor cloud and send User PIN
            // Get API credentials and other confidential details of the user
            String apidetails = ""TVEETER API Key: secrettveeterapikey\nAPI User name: diva2\nAPI Password: p@ssword2"";
            // Display the details on the app
            apicview.setText(apidetails);
        }",
onCreate,getIntent,APICreds2Activity.java,unknown,[[]],Mid-level (Logic),Unknown,Direct,"onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_apicreds2);
        TextView apicview = (TextView) findViewById(R.id.apic2TextView);
        EditText pintext  = (EditText) findViewById(R.id.aci2pinText);
        Button  vbutton   = (Button) findViewById(R.id.aci2button);
        Intent i = getIntent();
        boolean bcheck = i.getBooleanExtra(getString(R.string.chk_pin), true);

        if (bcheck == false) {
            // Connect to vendor cloud and send User PIN
            // Get API credentials and other confidential details of the user
            String apidetails = ""TVEETER API Key: secrettveeterapikey\nAPI User name: diva2\nAPI Password: p@ssword2"";
            // Display the details on the app
            apicview.setText(apidetails);
        }",
onCreate,i.getBooleanExtra,APICreds2Activity.java,unknown,[],Mid-level (Logic),Unknown,Direct,"onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_apicreds2);
        TextView apicview = (TextView) findViewById(R.id.apic2TextView);
        EditText pintext  = (EditText) findViewById(R.id.aci2pinText);
        Button  vbutton   = (Button) findViewById(R.id.aci2button);
        Intent i = getIntent();
        boolean bcheck = i.getBooleanExtra(getString(R.string.chk_pin), true);

        if (bcheck == false) {
            // Connect to vendor cloud and send User PIN
            // Get API credentials and other confidential details of the user
            String apidetails = ""TVEETER API Key: secrettveeterapikey\nAPI User name: diva2\nAPI Password: p@ssword2"";
            // Display the details on the app
            apicview.setText(apidetails);
        }",
onCreate,getString,APICreds2Activity.java,unknown,[['chk_pin']],Mid-level (Logic),Unknown,Direct,"onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_apicreds2);
        TextView apicview = (TextView) findViewById(R.id.apic2TextView);
        EditText pintext  = (EditText) findViewById(R.id.aci2pinText);
        Button  vbutton   = (Button) findViewById(R.id.aci2button);
        Intent i = getIntent();
        boolean bcheck = i.getBooleanExtra(getString(R.string.chk_pin), true);

        if (bcheck == false) {
            // Connect to vendor cloud and send User PIN
            // Get API credentials and other confidential details of the user
            String apidetails = ""TVEETER API Key: secrettveeterapikey\nAPI User name: diva2\nAPI Password: p@ssword2"";
            // Display the details on the app
            apicview.setText(apidetails);
        }",
onCreate,apicview.setText,APICreds2Activity.java,unknown,[],Mid-level (Logic),Unknown,Direct,"onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_apicreds2);
        TextView apicview = (TextView) findViewById(R.id.apic2TextView);
        EditText pintext  = (EditText) findViewById(R.id.aci2pinText);
        Button  vbutton   = (Button) findViewById(R.id.aci2button);
        Intent i = getIntent();
        boolean bcheck = i.getBooleanExtra(getString(R.string.chk_pin), true);

        if (bcheck == false) {
            // Connect to vendor cloud and send User PIN
            // Get API credentials and other confidential details of the user
            String apidetails = ""TVEETER API Key: secrettveeterapikey\nAPI User name: diva2\nAPI Password: p@ssword2"";
            // Display the details on the app
            apicview.setText(apidetails);
        }",
onCreate,apicview.setText,APICreds2Activity.java,unknown,[],Mid-level (Logic),Unknown,Direct,"onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_apicreds2);
        TextView apicview = (TextView) findViewById(R.id.apic2TextView);
        EditText pintext  = (EditText) findViewById(R.id.aci2pinText);
        Button  vbutton   = (Button) findViewById(R.id.aci2button);
        Intent i = getIntent();
        boolean bcheck = i.getBooleanExtra(getString(R.string.chk_pin), true);

        if (bcheck == false) {
            // Connect to vendor cloud and send User PIN
            // Get API credentials and other confidential details of the user
            String apidetails = ""TVEETER API Key: secrettveeterapikey\nAPI User name: diva2\nAPI Password: p@ssword2"";
            // Display the details on the app
            apicview.setText(apidetails);
        }",
onCreate,pintext.setVisibility,APICreds2Activity.java,unknown,[],Mid-level (Logic),Unknown,Direct,"onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_apicreds2);
        TextView apicview = (TextView) findViewById(R.id.apic2TextView);
        EditText pintext  = (EditText) findViewById(R.id.aci2pinText);
        Button  vbutton   = (Button) findViewById(R.id.aci2button);
        Intent i = getIntent();
        boolean bcheck = i.getBooleanExtra(getString(R.string.chk_pin), true);

        if (bcheck == false) {
            // Connect to vendor cloud and send User PIN
            // Get API credentials and other confidential details of the user
            String apidetails = ""TVEETER API Key: secrettveeterapikey\nAPI User name: diva2\nAPI Password: p@ssword2"";
            // Display the details on the app
            apicview.setText(apidetails);
        }",
onCreate,vbutton.setVisibility,APICreds2Activity.java,unknown,[],Mid-level (Logic),Unknown,Direct,"onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_apicreds2);
        TextView apicview = (TextView) findViewById(R.id.apic2TextView);
        EditText pintext  = (EditText) findViewById(R.id.aci2pinText);
        Button  vbutton   = (Button) findViewById(R.id.aci2button);
        Intent i = getIntent();
        boolean bcheck = i.getBooleanExtra(getString(R.string.chk_pin), true);

        if (bcheck == false) {
            // Connect to vendor cloud and send User PIN
            // Get API credentials and other confidential details of the user
            String apidetails = ""TVEETER API Key: secrettveeterapikey\nAPI User name: diva2\nAPI Password: p@ssword2"";
            // Display the details on the app
            apicview.setText(apidetails);
        }",
viewCreds,Toast.makeText,APICreds2Activity.java,unknown,[],High-level (Application),Unknown,Direct,"viewCreds(View view) {
        //Save user PIN
        // Connect to vendor cloud and send User PIN
        // Get API credentials and other confidential details of the user
        // If PIN is wrong ask user to enter correct pin
        Toast.makeText(this, ""Invalid PIN. Please try again"", Toast.LENGTH_SHORT).show();
    }",
viewCreds,show,APICreds2Activity.java,unknown,[[]],High-level (Application),Unknown,Direct,"viewCreds(View view) {
        //Save user PIN
        // Connect to vendor cloud and send User PIN
        // Get API credentials and other confidential details of the user
        // If PIN is wrong ask user to enter correct pin
        Toast.makeText(this, ""Invalid PIN. Please try again"", Toast.LENGTH_SHORT).show();
    }",
onCreate,setContentView,AccessControl2Activity.java,unknown,[['activity_access_control2']],Mid-level (Logic),Unknown,Direct,"onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_access_control2);
    }",
viewAPICredentials,findViewById,AccessControl2Activity.java,unknown,[['aci2rbregnow']],High-level (Application),Unknown,Direct,"viewAPICredentials(View view) {
        //RadioButton rbalreadyreg = (RadioButton) findViewById(R.id.aci2rbalreadyreg);
        RadioButton rbregnow = (RadioButton) findViewById(R.id.aci2rbregnow);
        Intent i = new Intent();
        boolean chk_pin = rbregnow.isChecked();

        // Calling implicit intent i.e. with app defined action instead of activity class
        i.setAction(""jakhar.aseem.diva.action.VIEW_CREDS2"");
        i.putExtra(getString(R.string.chk_pin), chk_pin);
        // Check whether the intent resolves to an activity or not
        if (i.resolveActivity(getPackageManager()) != null){
            startActivity(i);
        }",
viewAPICredentials,rbregnow.isChecked,AccessControl2Activity.java,unknown,[],High-level (Application),Unknown,Direct,"viewAPICredentials(View view) {
        //RadioButton rbalreadyreg = (RadioButton) findViewById(R.id.aci2rbalreadyreg);
        RadioButton rbregnow = (RadioButton) findViewById(R.id.aci2rbregnow);
        Intent i = new Intent();
        boolean chk_pin = rbregnow.isChecked();

        // Calling implicit intent i.e. with app defined action instead of activity class
        i.setAction(""jakhar.aseem.diva.action.VIEW_CREDS2"");
        i.putExtra(getString(R.string.chk_pin), chk_pin);
        // Check whether the intent resolves to an activity or not
        if (i.resolveActivity(getPackageManager()) != null){
            startActivity(i);
        }",
viewAPICredentials,i.setAction,AccessControl2Activity.java,unknown,[],High-level (Application),Unknown,Direct,"viewAPICredentials(View view) {
        //RadioButton rbalreadyreg = (RadioButton) findViewById(R.id.aci2rbalreadyreg);
        RadioButton rbregnow = (RadioButton) findViewById(R.id.aci2rbregnow);
        Intent i = new Intent();
        boolean chk_pin = rbregnow.isChecked();

        // Calling implicit intent i.e. with app defined action instead of activity class
        i.setAction(""jakhar.aseem.diva.action.VIEW_CREDS2"");
        i.putExtra(getString(R.string.chk_pin), chk_pin);
        // Check whether the intent resolves to an activity or not
        if (i.resolveActivity(getPackageManager()) != null){
            startActivity(i);
        }",
viewAPICredentials,i.putExtra,AccessControl2Activity.java,unknown,[],High-level (Application),Unknown,Direct,"viewAPICredentials(View view) {
        //RadioButton rbalreadyreg = (RadioButton) findViewById(R.id.aci2rbalreadyreg);
        RadioButton rbregnow = (RadioButton) findViewById(R.id.aci2rbregnow);
        Intent i = new Intent();
        boolean chk_pin = rbregnow.isChecked();

        // Calling implicit intent i.e. with app defined action instead of activity class
        i.setAction(""jakhar.aseem.diva.action.VIEW_CREDS2"");
        i.putExtra(getString(R.string.chk_pin), chk_pin);
        // Check whether the intent resolves to an activity or not
        if (i.resolveActivity(getPackageManager()) != null){
            startActivity(i);
        }",
viewAPICredentials,getString,AccessControl2Activity.java,unknown,[['chk_pin']],High-level (Application),Unknown,Direct,"viewAPICredentials(View view) {
        //RadioButton rbalreadyreg = (RadioButton) findViewById(R.id.aci2rbalreadyreg);
        RadioButton rbregnow = (RadioButton) findViewById(R.id.aci2rbregnow);
        Intent i = new Intent();
        boolean chk_pin = rbregnow.isChecked();

        // Calling implicit intent i.e. with app defined action instead of activity class
        i.setAction(""jakhar.aseem.diva.action.VIEW_CREDS2"");
        i.putExtra(getString(R.string.chk_pin), chk_pin);
        // Check whether the intent resolves to an activity or not
        if (i.resolveActivity(getPackageManager()) != null){
            startActivity(i);
        }",
viewAPICredentials,i.resolveActivity,AccessControl2Activity.java,unknown,[],High-level (Application),Unknown,Direct,"viewAPICredentials(View view) {
        //RadioButton rbalreadyreg = (RadioButton) findViewById(R.id.aci2rbalreadyreg);
        RadioButton rbregnow = (RadioButton) findViewById(R.id.aci2rbregnow);
        Intent i = new Intent();
        boolean chk_pin = rbregnow.isChecked();

        // Calling implicit intent i.e. with app defined action instead of activity class
        i.setAction(""jakhar.aseem.diva.action.VIEW_CREDS2"");
        i.putExtra(getString(R.string.chk_pin), chk_pin);
        // Check whether the intent resolves to an activity or not
        if (i.resolveActivity(getPackageManager()) != null){
            startActivity(i);
        }",
viewAPICredentials,getPackageManager,AccessControl2Activity.java,unknown,[[]],High-level (Application),Unknown,Direct,"viewAPICredentials(View view) {
        //RadioButton rbalreadyreg = (RadioButton) findViewById(R.id.aci2rbalreadyreg);
        RadioButton rbregnow = (RadioButton) findViewById(R.id.aci2rbregnow);
        Intent i = new Intent();
        boolean chk_pin = rbregnow.isChecked();

        // Calling implicit intent i.e. with app defined action instead of activity class
        i.setAction(""jakhar.aseem.diva.action.VIEW_CREDS2"");
        i.putExtra(getString(R.string.chk_pin), chk_pin);
        // Check whether the intent resolves to an activity or not
        if (i.resolveActivity(getPackageManager()) != null){
            startActivity(i);
        }",
viewAPICredentials,startActivity,AccessControl2Activity.java,unknown,[['i']],High-level (Application),Unknown,Direct,"viewAPICredentials(View view) {
        //RadioButton rbalreadyreg = (RadioButton) findViewById(R.id.aci2rbalreadyreg);
        RadioButton rbregnow = (RadioButton) findViewById(R.id.aci2rbregnow);
        Intent i = new Intent();
        boolean chk_pin = rbregnow.isChecked();

        // Calling implicit intent i.e. with app defined action instead of activity class
        i.setAction(""jakhar.aseem.diva.action.VIEW_CREDS2"");
        i.putExtra(getString(R.string.chk_pin), chk_pin);
        // Check whether the intent resolves to an activity or not
        if (i.resolveActivity(getPackageManager()) != null){
            startActivity(i);
        }",
viewAPICredentials,Toast.makeText,AccessControl2Activity.java,unknown,[],High-level (Application),Unknown,Direct,"viewAPICredentials(View view) {
        //RadioButton rbalreadyreg = (RadioButton) findViewById(R.id.aci2rbalreadyreg);
        RadioButton rbregnow = (RadioButton) findViewById(R.id.aci2rbregnow);
        Intent i = new Intent();
        boolean chk_pin = rbregnow.isChecked();

        // Calling implicit intent i.e. with app defined action instead of activity class
        i.setAction(""jakhar.aseem.diva.action.VIEW_CREDS2"");
        i.putExtra(getString(R.string.chk_pin), chk_pin);
        // Check whether the intent resolves to an activity or not
        if (i.resolveActivity(getPackageManager()) != null){
            startActivity(i);
        }",
viewAPICredentials,show,AccessControl2Activity.java,unknown,[[]],High-level (Application),Unknown,Direct,"viewAPICredentials(View view) {
        //RadioButton rbalreadyreg = (RadioButton) findViewById(R.id.aci2rbalreadyreg);
        RadioButton rbregnow = (RadioButton) findViewById(R.id.aci2rbregnow);
        Intent i = new Intent();
        boolean chk_pin = rbregnow.isChecked();

        // Calling implicit intent i.e. with app defined action instead of activity class
        i.setAction(""jakhar.aseem.diva.action.VIEW_CREDS2"");
        i.putExtra(getString(R.string.chk_pin), chk_pin);
        // Check whether the intent resolves to an activity or not
        if (i.resolveActivity(getPackageManager()) != null){
            startActivity(i);
        }",
viewAPICredentials,Log.e,AccessControl2Activity.java,unknown,[],High-level (Application),Unknown,Direct,"viewAPICredentials(View view) {
        //RadioButton rbalreadyreg = (RadioButton) findViewById(R.id.aci2rbalreadyreg);
        RadioButton rbregnow = (RadioButton) findViewById(R.id.aci2rbregnow);
        Intent i = new Intent();
        boolean chk_pin = rbregnow.isChecked();

        // Calling implicit intent i.e. with app defined action instead of activity class
        i.setAction(""jakhar.aseem.diva.action.VIEW_CREDS2"");
        i.putExtra(getString(R.string.chk_pin), chk_pin);
        // Check whether the intent resolves to an activity or not
        if (i.resolveActivity(getPackageManager()) != null){
            startActivity(i);
        }",
onCreate,setContentView,InputValidation2URISchemeActivity.java,unknown,[['activity_input_validation2_urischeme']],Mid-level (Logic),Unknown,Direct,"onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        setContentView(R.layout.activity_input_validation2_urischeme);
        WebView wview = (WebView) findViewById(R.id.ivi2wview);
        WebSettings wset = wview.getSettings();
        wset.setJavaScriptEnabled(true);

    }",
onCreate,findViewById,InputValidation2URISchemeActivity.java,unknown,[['ivi2wview']],Mid-level (Logic),Unknown,Direct,"onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        setContentView(R.layout.activity_input_validation2_urischeme);
        WebView wview = (WebView) findViewById(R.id.ivi2wview);
        WebSettings wset = wview.getSettings();
        wset.setJavaScriptEnabled(true);

    }",
onCreate,wview.getSettings,InputValidation2URISchemeActivity.java,unknown,[],Mid-level (Logic),Unknown,Direct,"onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        setContentView(R.layout.activity_input_validation2_urischeme);
        WebView wview = (WebView) findViewById(R.id.ivi2wview);
        WebSettings wset = wview.getSettings();
        wset.setJavaScriptEnabled(true);

    }",
onCreate,wset.setJavaScriptEnabled,InputValidation2URISchemeActivity.java,unknown,[],Mid-level (Logic),Unknown,Direct,"onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        setContentView(R.layout.activity_input_validation2_urischeme);
        WebView wview = (WebView) findViewById(R.id.ivi2wview);
        WebSettings wset = wview.getSettings();
        wset.setJavaScriptEnabled(true);

    }",
get,findViewById,InputValidation2URISchemeActivity.java,unknown,"[['ivi2uri'], ['ivi2wview']]",High-level (Application),Unknown,Direct,"get(View view) {
        EditText uriText = (EditText) findViewById(R.id.ivi2uri);
        WebView wview = (WebView) findViewById(R.id.ivi2wview);

        wview.loadUrl(uriText.getText().toString());
    }",
get,findViewById,InputValidation2URISchemeActivity.java,unknown,"[['ivi2uri'], ['ivi2wview']]",High-level (Application),Unknown,Direct,"get(View view) {
        EditText uriText = (EditText) findViewById(R.id.ivi2uri);
        WebView wview = (WebView) findViewById(R.id.ivi2wview);

        wview.loadUrl(uriText.getText().toString());
    }",
get,wview.loadUrl,InputValidation2URISchemeActivity.java,unknown,[],High-level (Application),Unknown,Direct,"get(View view) {
        EditText uriText = (EditText) findViewById(R.id.ivi2uri);
        WebView wview = (WebView) findViewById(R.id.ivi2wview);

        wview.loadUrl(uriText.getText().toString());
    }",
get,uriText.getText,InputValidation2URISchemeActivity.java,unknown,[],High-level (Application),Unknown,Direct,"get(View view) {
        EditText uriText = (EditText) findViewById(R.id.ivi2uri);
        WebView wview = (WebView) findViewById(R.id.ivi2wview);

        wview.loadUrl(uriText.getText().toString());
    }",
get,toString,InputValidation2URISchemeActivity.java,unknown,[[]],High-level (Application),Unknown,Direct,"get(View view) {
        EditText uriText = (EditText) findViewById(R.id.ivi2uri);
        WebView wview = (WebView) findViewById(R.id.ivi2wview);

        wview.loadUrl(uriText.getText().toString());
    }",
onCreate,setContentView,InsecureDataStorage4Activity.java,unknown,[['activity_insecure_data_storage4']],Mid-level (Logic),Unknown,Direct,"onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_insecure_data_storage4);
    }",
saveCredentials,findViewById,InsecureDataStorage4Activity.java,unknown,"[['ids4Usr'], ['ids4Pwd']]",High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        EditText usr = (EditText) findViewById(R.id.ids4Usr);
        EditText pwd = (EditText) findViewById(R.id.ids4Pwd);

        File sdir = Environment.getExternalStorageDirectory();

        try {
            File uinfo = new File(sdir.getAbsolutePath() + ""/.uinfo.txt"");
            uinfo.setReadable(true);
            uinfo.setWritable(true);
            FileWriter fw = new FileWriter(uinfo);
            fw.write(usr.getText().toString() + "":"" + pwd.getText().toString() + ""\n"");
            fw.close();
            Toast.makeText(this, ""3rd party credentials saved successfully!"", Toast.LENGTH_SHORT).show();
            // Now you can read the temporary file where ever the credentials are required.
        }",
saveCredentials,findViewById,InsecureDataStorage4Activity.java,unknown,"[['ids4Usr'], ['ids4Pwd']]",High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        EditText usr = (EditText) findViewById(R.id.ids4Usr);
        EditText pwd = (EditText) findViewById(R.id.ids4Pwd);

        File sdir = Environment.getExternalStorageDirectory();

        try {
            File uinfo = new File(sdir.getAbsolutePath() + ""/.uinfo.txt"");
            uinfo.setReadable(true);
            uinfo.setWritable(true);
            FileWriter fw = new FileWriter(uinfo);
            fw.write(usr.getText().toString() + "":"" + pwd.getText().toString() + ""\n"");
            fw.close();
            Toast.makeText(this, ""3rd party credentials saved successfully!"", Toast.LENGTH_SHORT).show();
            // Now you can read the temporary file where ever the credentials are required.
        }",
saveCredentials,Environment.getExternalStorageDirectory,InsecureDataStorage4Activity.java,unknown,[],High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        EditText usr = (EditText) findViewById(R.id.ids4Usr);
        EditText pwd = (EditText) findViewById(R.id.ids4Pwd);

        File sdir = Environment.getExternalStorageDirectory();

        try {
            File uinfo = new File(sdir.getAbsolutePath() + ""/.uinfo.txt"");
            uinfo.setReadable(true);
            uinfo.setWritable(true);
            FileWriter fw = new FileWriter(uinfo);
            fw.write(usr.getText().toString() + "":"" + pwd.getText().toString() + ""\n"");
            fw.close();
            Toast.makeText(this, ""3rd party credentials saved successfully!"", Toast.LENGTH_SHORT).show();
            // Now you can read the temporary file where ever the credentials are required.
        }",
saveCredentials,sdir.getAbsolutePath,InsecureDataStorage4Activity.java,unknown,[],High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        EditText usr = (EditText) findViewById(R.id.ids4Usr);
        EditText pwd = (EditText) findViewById(R.id.ids4Pwd);

        File sdir = Environment.getExternalStorageDirectory();

        try {
            File uinfo = new File(sdir.getAbsolutePath() + ""/.uinfo.txt"");
            uinfo.setReadable(true);
            uinfo.setWritable(true);
            FileWriter fw = new FileWriter(uinfo);
            fw.write(usr.getText().toString() + "":"" + pwd.getText().toString() + ""\n"");
            fw.close();
            Toast.makeText(this, ""3rd party credentials saved successfully!"", Toast.LENGTH_SHORT).show();
            // Now you can read the temporary file where ever the credentials are required.
        }",
saveCredentials,uinfo.setReadable,InsecureDataStorage4Activity.java,unknown,[],High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        EditText usr = (EditText) findViewById(R.id.ids4Usr);
        EditText pwd = (EditText) findViewById(R.id.ids4Pwd);

        File sdir = Environment.getExternalStorageDirectory();

        try {
            File uinfo = new File(sdir.getAbsolutePath() + ""/.uinfo.txt"");
            uinfo.setReadable(true);
            uinfo.setWritable(true);
            FileWriter fw = new FileWriter(uinfo);
            fw.write(usr.getText().toString() + "":"" + pwd.getText().toString() + ""\n"");
            fw.close();
            Toast.makeText(this, ""3rd party credentials saved successfully!"", Toast.LENGTH_SHORT).show();
            // Now you can read the temporary file where ever the credentials are required.
        }",
saveCredentials,uinfo.setWritable,InsecureDataStorage4Activity.java,unknown,[],High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        EditText usr = (EditText) findViewById(R.id.ids4Usr);
        EditText pwd = (EditText) findViewById(R.id.ids4Pwd);

        File sdir = Environment.getExternalStorageDirectory();

        try {
            File uinfo = new File(sdir.getAbsolutePath() + ""/.uinfo.txt"");
            uinfo.setReadable(true);
            uinfo.setWritable(true);
            FileWriter fw = new FileWriter(uinfo);
            fw.write(usr.getText().toString() + "":"" + pwd.getText().toString() + ""\n"");
            fw.close();
            Toast.makeText(this, ""3rd party credentials saved successfully!"", Toast.LENGTH_SHORT).show();
            // Now you can read the temporary file where ever the credentials are required.
        }",
saveCredentials,fw.write,InsecureDataStorage4Activity.java,unknown,[],High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        EditText usr = (EditText) findViewById(R.id.ids4Usr);
        EditText pwd = (EditText) findViewById(R.id.ids4Pwd);

        File sdir = Environment.getExternalStorageDirectory();

        try {
            File uinfo = new File(sdir.getAbsolutePath() + ""/.uinfo.txt"");
            uinfo.setReadable(true);
            uinfo.setWritable(true);
            FileWriter fw = new FileWriter(uinfo);
            fw.write(usr.getText().toString() + "":"" + pwd.getText().toString() + ""\n"");
            fw.close();
            Toast.makeText(this, ""3rd party credentials saved successfully!"", Toast.LENGTH_SHORT).show();
            // Now you can read the temporary file where ever the credentials are required.
        }",
saveCredentials,usr.getText,InsecureDataStorage4Activity.java,unknown,[],High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        EditText usr = (EditText) findViewById(R.id.ids4Usr);
        EditText pwd = (EditText) findViewById(R.id.ids4Pwd);

        File sdir = Environment.getExternalStorageDirectory();

        try {
            File uinfo = new File(sdir.getAbsolutePath() + ""/.uinfo.txt"");
            uinfo.setReadable(true);
            uinfo.setWritable(true);
            FileWriter fw = new FileWriter(uinfo);
            fw.write(usr.getText().toString() + "":"" + pwd.getText().toString() + ""\n"");
            fw.close();
            Toast.makeText(this, ""3rd party credentials saved successfully!"", Toast.LENGTH_SHORT).show();
            // Now you can read the temporary file where ever the credentials are required.
        }",
saveCredentials,toString,InsecureDataStorage4Activity.java,unknown,"[[], []]",High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        EditText usr = (EditText) findViewById(R.id.ids4Usr);
        EditText pwd = (EditText) findViewById(R.id.ids4Pwd);

        File sdir = Environment.getExternalStorageDirectory();

        try {
            File uinfo = new File(sdir.getAbsolutePath() + ""/.uinfo.txt"");
            uinfo.setReadable(true);
            uinfo.setWritable(true);
            FileWriter fw = new FileWriter(uinfo);
            fw.write(usr.getText().toString() + "":"" + pwd.getText().toString() + ""\n"");
            fw.close();
            Toast.makeText(this, ""3rd party credentials saved successfully!"", Toast.LENGTH_SHORT).show();
            // Now you can read the temporary file where ever the credentials are required.
        }",
saveCredentials,pwd.getText,InsecureDataStorage4Activity.java,unknown,[],High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        EditText usr = (EditText) findViewById(R.id.ids4Usr);
        EditText pwd = (EditText) findViewById(R.id.ids4Pwd);

        File sdir = Environment.getExternalStorageDirectory();

        try {
            File uinfo = new File(sdir.getAbsolutePath() + ""/.uinfo.txt"");
            uinfo.setReadable(true);
            uinfo.setWritable(true);
            FileWriter fw = new FileWriter(uinfo);
            fw.write(usr.getText().toString() + "":"" + pwd.getText().toString() + ""\n"");
            fw.close();
            Toast.makeText(this, ""3rd party credentials saved successfully!"", Toast.LENGTH_SHORT).show();
            // Now you can read the temporary file where ever the credentials are required.
        }",
saveCredentials,toString,InsecureDataStorage4Activity.java,unknown,"[[], []]",High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        EditText usr = (EditText) findViewById(R.id.ids4Usr);
        EditText pwd = (EditText) findViewById(R.id.ids4Pwd);

        File sdir = Environment.getExternalStorageDirectory();

        try {
            File uinfo = new File(sdir.getAbsolutePath() + ""/.uinfo.txt"");
            uinfo.setReadable(true);
            uinfo.setWritable(true);
            FileWriter fw = new FileWriter(uinfo);
            fw.write(usr.getText().toString() + "":"" + pwd.getText().toString() + ""\n"");
            fw.close();
            Toast.makeText(this, ""3rd party credentials saved successfully!"", Toast.LENGTH_SHORT).show();
            // Now you can read the temporary file where ever the credentials are required.
        }",
saveCredentials,fw.close,InsecureDataStorage4Activity.java,unknown,[],High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        EditText usr = (EditText) findViewById(R.id.ids4Usr);
        EditText pwd = (EditText) findViewById(R.id.ids4Pwd);

        File sdir = Environment.getExternalStorageDirectory();

        try {
            File uinfo = new File(sdir.getAbsolutePath() + ""/.uinfo.txt"");
            uinfo.setReadable(true);
            uinfo.setWritable(true);
            FileWriter fw = new FileWriter(uinfo);
            fw.write(usr.getText().toString() + "":"" + pwd.getText().toString() + ""\n"");
            fw.close();
            Toast.makeText(this, ""3rd party credentials saved successfully!"", Toast.LENGTH_SHORT).show();
            // Now you can read the temporary file where ever the credentials are required.
        }",
saveCredentials,Toast.makeText,InsecureDataStorage4Activity.java,unknown,[],High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        EditText usr = (EditText) findViewById(R.id.ids4Usr);
        EditText pwd = (EditText) findViewById(R.id.ids4Pwd);

        File sdir = Environment.getExternalStorageDirectory();

        try {
            File uinfo = new File(sdir.getAbsolutePath() + ""/.uinfo.txt"");
            uinfo.setReadable(true);
            uinfo.setWritable(true);
            FileWriter fw = new FileWriter(uinfo);
            fw.write(usr.getText().toString() + "":"" + pwd.getText().toString() + ""\n"");
            fw.close();
            Toast.makeText(this, ""3rd party credentials saved successfully!"", Toast.LENGTH_SHORT).show();
            // Now you can read the temporary file where ever the credentials are required.
        }",
saveCredentials,show,InsecureDataStorage4Activity.java,unknown,"[[], []]",High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        EditText usr = (EditText) findViewById(R.id.ids4Usr);
        EditText pwd = (EditText) findViewById(R.id.ids4Pwd);

        File sdir = Environment.getExternalStorageDirectory();

        try {
            File uinfo = new File(sdir.getAbsolutePath() + ""/.uinfo.txt"");
            uinfo.setReadable(true);
            uinfo.setWritable(true);
            FileWriter fw = new FileWriter(uinfo);
            fw.write(usr.getText().toString() + "":"" + pwd.getText().toString() + ""\n"");
            fw.close();
            Toast.makeText(this, ""3rd party credentials saved successfully!"", Toast.LENGTH_SHORT).show();
            // Now you can read the temporary file where ever the credentials are required.
        }",
saveCredentials,Toast.makeText,InsecureDataStorage4Activity.java,unknown,[],High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        EditText usr = (EditText) findViewById(R.id.ids4Usr);
        EditText pwd = (EditText) findViewById(R.id.ids4Pwd);

        File sdir = Environment.getExternalStorageDirectory();

        try {
            File uinfo = new File(sdir.getAbsolutePath() + ""/.uinfo.txt"");
            uinfo.setReadable(true);
            uinfo.setWritable(true);
            FileWriter fw = new FileWriter(uinfo);
            fw.write(usr.getText().toString() + "":"" + pwd.getText().toString() + ""\n"");
            fw.close();
            Toast.makeText(this, ""3rd party credentials saved successfully!"", Toast.LENGTH_SHORT).show();
            // Now you can read the temporary file where ever the credentials are required.
        }",
saveCredentials,show,InsecureDataStorage4Activity.java,unknown,"[[], []]",High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        EditText usr = (EditText) findViewById(R.id.ids4Usr);
        EditText pwd = (EditText) findViewById(R.id.ids4Pwd);

        File sdir = Environment.getExternalStorageDirectory();

        try {
            File uinfo = new File(sdir.getAbsolutePath() + ""/.uinfo.txt"");
            uinfo.setReadable(true);
            uinfo.setWritable(true);
            FileWriter fw = new FileWriter(uinfo);
            fw.write(usr.getText().toString() + "":"" + pwd.getText().toString() + ""\n"");
            fw.close();
            Toast.makeText(this, ""3rd party credentials saved successfully!"", Toast.LENGTH_SHORT).show();
            // Now you can read the temporary file where ever the credentials are required.
        }",
saveCredentials,Log.d,InsecureDataStorage4Activity.java,unknown,[],High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        EditText usr = (EditText) findViewById(R.id.ids4Usr);
        EditText pwd = (EditText) findViewById(R.id.ids4Pwd);

        File sdir = Environment.getExternalStorageDirectory();

        try {
            File uinfo = new File(sdir.getAbsolutePath() + ""/.uinfo.txt"");
            uinfo.setReadable(true);
            uinfo.setWritable(true);
            FileWriter fw = new FileWriter(uinfo);
            fw.write(usr.getText().toString() + "":"" + pwd.getText().toString() + ""\n"");
            fw.close();
            Toast.makeText(this, ""3rd party credentials saved successfully!"", Toast.LENGTH_SHORT).show();
            // Now you can read the temporary file where ever the credentials are required.
        }",
saveCredentials,e.getMessage,InsecureDataStorage4Activity.java,unknown,[],High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        EditText usr = (EditText) findViewById(R.id.ids4Usr);
        EditText pwd = (EditText) findViewById(R.id.ids4Pwd);

        File sdir = Environment.getExternalStorageDirectory();

        try {
            File uinfo = new File(sdir.getAbsolutePath() + ""/.uinfo.txt"");
            uinfo.setReadable(true);
            uinfo.setWritable(true);
            FileWriter fw = new FileWriter(uinfo);
            fw.write(usr.getText().toString() + "":"" + pwd.getText().toString() + ""\n"");
            fw.close();
            Toast.makeText(this, ""3rd party credentials saved successfully!"", Toast.LENGTH_SHORT).show();
            // Now you can read the temporary file where ever the credentials are required.
        }",
onCreate,setContentView,InsecureDataStorage3Activity.java,unknown,[['activity_insecure_data_storage3']],Mid-level (Logic),Unknown,Direct,"onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_insecure_data_storage3);
    }",
saveCredentials,findViewById,InsecureDataStorage3Activity.java,unknown,"[['ids3Usr'], ['ids3Pwd']]",High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        EditText usr = (EditText) findViewById(R.id.ids3Usr);
        EditText pwd = (EditText) findViewById(R.id.ids3Pwd);

        File ddir =  new File(getApplicationInfo().dataDir);

        try {
            File uinfo = File.createTempFile(""uinfo"", ""tmp"", ddir);
            uinfo.setReadable(true);
            uinfo.setWritable(true);
            FileWriter fw = new FileWriter(uinfo);
            fw.write(usr.getText().toString() + "":"" + pwd.getText().toString() + ""\n"");
            fw.close();
            Toast.makeText(this, ""3rd party credentials saved successfully!"", Toast.LENGTH_SHORT).show();
            // Now you can read the temporary file where ever the credentials are required.
        }",
saveCredentials,findViewById,InsecureDataStorage3Activity.java,unknown,"[['ids3Usr'], ['ids3Pwd']]",High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        EditText usr = (EditText) findViewById(R.id.ids3Usr);
        EditText pwd = (EditText) findViewById(R.id.ids3Pwd);

        File ddir =  new File(getApplicationInfo().dataDir);

        try {
            File uinfo = File.createTempFile(""uinfo"", ""tmp"", ddir);
            uinfo.setReadable(true);
            uinfo.setWritable(true);
            FileWriter fw = new FileWriter(uinfo);
            fw.write(usr.getText().toString() + "":"" + pwd.getText().toString() + ""\n"");
            fw.close();
            Toast.makeText(this, ""3rd party credentials saved successfully!"", Toast.LENGTH_SHORT).show();
            // Now you can read the temporary file where ever the credentials are required.
        }",
saveCredentials,getApplicationInfo,InsecureDataStorage3Activity.java,unknown,[[]],High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        EditText usr = (EditText) findViewById(R.id.ids3Usr);
        EditText pwd = (EditText) findViewById(R.id.ids3Pwd);

        File ddir =  new File(getApplicationInfo().dataDir);

        try {
            File uinfo = File.createTempFile(""uinfo"", ""tmp"", ddir);
            uinfo.setReadable(true);
            uinfo.setWritable(true);
            FileWriter fw = new FileWriter(uinfo);
            fw.write(usr.getText().toString() + "":"" + pwd.getText().toString() + ""\n"");
            fw.close();
            Toast.makeText(this, ""3rd party credentials saved successfully!"", Toast.LENGTH_SHORT).show();
            // Now you can read the temporary file where ever the credentials are required.
        }",
saveCredentials,File.createTempFile,InsecureDataStorage3Activity.java,unknown,[],High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        EditText usr = (EditText) findViewById(R.id.ids3Usr);
        EditText pwd = (EditText) findViewById(R.id.ids3Pwd);

        File ddir =  new File(getApplicationInfo().dataDir);

        try {
            File uinfo = File.createTempFile(""uinfo"", ""tmp"", ddir);
            uinfo.setReadable(true);
            uinfo.setWritable(true);
            FileWriter fw = new FileWriter(uinfo);
            fw.write(usr.getText().toString() + "":"" + pwd.getText().toString() + ""\n"");
            fw.close();
            Toast.makeText(this, ""3rd party credentials saved successfully!"", Toast.LENGTH_SHORT).show();
            // Now you can read the temporary file where ever the credentials are required.
        }",
saveCredentials,uinfo.setReadable,InsecureDataStorage3Activity.java,unknown,[],High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        EditText usr = (EditText) findViewById(R.id.ids3Usr);
        EditText pwd = (EditText) findViewById(R.id.ids3Pwd);

        File ddir =  new File(getApplicationInfo().dataDir);

        try {
            File uinfo = File.createTempFile(""uinfo"", ""tmp"", ddir);
            uinfo.setReadable(true);
            uinfo.setWritable(true);
            FileWriter fw = new FileWriter(uinfo);
            fw.write(usr.getText().toString() + "":"" + pwd.getText().toString() + ""\n"");
            fw.close();
            Toast.makeText(this, ""3rd party credentials saved successfully!"", Toast.LENGTH_SHORT).show();
            // Now you can read the temporary file where ever the credentials are required.
        }",
saveCredentials,uinfo.setWritable,InsecureDataStorage3Activity.java,unknown,[],High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        EditText usr = (EditText) findViewById(R.id.ids3Usr);
        EditText pwd = (EditText) findViewById(R.id.ids3Pwd);

        File ddir =  new File(getApplicationInfo().dataDir);

        try {
            File uinfo = File.createTempFile(""uinfo"", ""tmp"", ddir);
            uinfo.setReadable(true);
            uinfo.setWritable(true);
            FileWriter fw = new FileWriter(uinfo);
            fw.write(usr.getText().toString() + "":"" + pwd.getText().toString() + ""\n"");
            fw.close();
            Toast.makeText(this, ""3rd party credentials saved successfully!"", Toast.LENGTH_SHORT).show();
            // Now you can read the temporary file where ever the credentials are required.
        }",
saveCredentials,fw.write,InsecureDataStorage3Activity.java,unknown,[],High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        EditText usr = (EditText) findViewById(R.id.ids3Usr);
        EditText pwd = (EditText) findViewById(R.id.ids3Pwd);

        File ddir =  new File(getApplicationInfo().dataDir);

        try {
            File uinfo = File.createTempFile(""uinfo"", ""tmp"", ddir);
            uinfo.setReadable(true);
            uinfo.setWritable(true);
            FileWriter fw = new FileWriter(uinfo);
            fw.write(usr.getText().toString() + "":"" + pwd.getText().toString() + ""\n"");
            fw.close();
            Toast.makeText(this, ""3rd party credentials saved successfully!"", Toast.LENGTH_SHORT).show();
            // Now you can read the temporary file where ever the credentials are required.
        }",
saveCredentials,usr.getText,InsecureDataStorage3Activity.java,unknown,[],High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        EditText usr = (EditText) findViewById(R.id.ids3Usr);
        EditText pwd = (EditText) findViewById(R.id.ids3Pwd);

        File ddir =  new File(getApplicationInfo().dataDir);

        try {
            File uinfo = File.createTempFile(""uinfo"", ""tmp"", ddir);
            uinfo.setReadable(true);
            uinfo.setWritable(true);
            FileWriter fw = new FileWriter(uinfo);
            fw.write(usr.getText().toString() + "":"" + pwd.getText().toString() + ""\n"");
            fw.close();
            Toast.makeText(this, ""3rd party credentials saved successfully!"", Toast.LENGTH_SHORT).show();
            // Now you can read the temporary file where ever the credentials are required.
        }",
saveCredentials,toString,InsecureDataStorage3Activity.java,unknown,"[[], []]",High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        EditText usr = (EditText) findViewById(R.id.ids3Usr);
        EditText pwd = (EditText) findViewById(R.id.ids3Pwd);

        File ddir =  new File(getApplicationInfo().dataDir);

        try {
            File uinfo = File.createTempFile(""uinfo"", ""tmp"", ddir);
            uinfo.setReadable(true);
            uinfo.setWritable(true);
            FileWriter fw = new FileWriter(uinfo);
            fw.write(usr.getText().toString() + "":"" + pwd.getText().toString() + ""\n"");
            fw.close();
            Toast.makeText(this, ""3rd party credentials saved successfully!"", Toast.LENGTH_SHORT).show();
            // Now you can read the temporary file where ever the credentials are required.
        }",
saveCredentials,pwd.getText,InsecureDataStorage3Activity.java,unknown,[],High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        EditText usr = (EditText) findViewById(R.id.ids3Usr);
        EditText pwd = (EditText) findViewById(R.id.ids3Pwd);

        File ddir =  new File(getApplicationInfo().dataDir);

        try {
            File uinfo = File.createTempFile(""uinfo"", ""tmp"", ddir);
            uinfo.setReadable(true);
            uinfo.setWritable(true);
            FileWriter fw = new FileWriter(uinfo);
            fw.write(usr.getText().toString() + "":"" + pwd.getText().toString() + ""\n"");
            fw.close();
            Toast.makeText(this, ""3rd party credentials saved successfully!"", Toast.LENGTH_SHORT).show();
            // Now you can read the temporary file where ever the credentials are required.
        }",
saveCredentials,toString,InsecureDataStorage3Activity.java,unknown,"[[], []]",High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        EditText usr = (EditText) findViewById(R.id.ids3Usr);
        EditText pwd = (EditText) findViewById(R.id.ids3Pwd);

        File ddir =  new File(getApplicationInfo().dataDir);

        try {
            File uinfo = File.createTempFile(""uinfo"", ""tmp"", ddir);
            uinfo.setReadable(true);
            uinfo.setWritable(true);
            FileWriter fw = new FileWriter(uinfo);
            fw.write(usr.getText().toString() + "":"" + pwd.getText().toString() + ""\n"");
            fw.close();
            Toast.makeText(this, ""3rd party credentials saved successfully!"", Toast.LENGTH_SHORT).show();
            // Now you can read the temporary file where ever the credentials are required.
        }",
saveCredentials,fw.close,InsecureDataStorage3Activity.java,unknown,[],High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        EditText usr = (EditText) findViewById(R.id.ids3Usr);
        EditText pwd = (EditText) findViewById(R.id.ids3Pwd);

        File ddir =  new File(getApplicationInfo().dataDir);

        try {
            File uinfo = File.createTempFile(""uinfo"", ""tmp"", ddir);
            uinfo.setReadable(true);
            uinfo.setWritable(true);
            FileWriter fw = new FileWriter(uinfo);
            fw.write(usr.getText().toString() + "":"" + pwd.getText().toString() + ""\n"");
            fw.close();
            Toast.makeText(this, ""3rd party credentials saved successfully!"", Toast.LENGTH_SHORT).show();
            // Now you can read the temporary file where ever the credentials are required.
        }",
saveCredentials,Toast.makeText,InsecureDataStorage3Activity.java,unknown,[],High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        EditText usr = (EditText) findViewById(R.id.ids3Usr);
        EditText pwd = (EditText) findViewById(R.id.ids3Pwd);

        File ddir =  new File(getApplicationInfo().dataDir);

        try {
            File uinfo = File.createTempFile(""uinfo"", ""tmp"", ddir);
            uinfo.setReadable(true);
            uinfo.setWritable(true);
            FileWriter fw = new FileWriter(uinfo);
            fw.write(usr.getText().toString() + "":"" + pwd.getText().toString() + ""\n"");
            fw.close();
            Toast.makeText(this, ""3rd party credentials saved successfully!"", Toast.LENGTH_SHORT).show();
            // Now you can read the temporary file where ever the credentials are required.
        }",
saveCredentials,show,InsecureDataStorage3Activity.java,unknown,"[[], []]",High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        EditText usr = (EditText) findViewById(R.id.ids3Usr);
        EditText pwd = (EditText) findViewById(R.id.ids3Pwd);

        File ddir =  new File(getApplicationInfo().dataDir);

        try {
            File uinfo = File.createTempFile(""uinfo"", ""tmp"", ddir);
            uinfo.setReadable(true);
            uinfo.setWritable(true);
            FileWriter fw = new FileWriter(uinfo);
            fw.write(usr.getText().toString() + "":"" + pwd.getText().toString() + ""\n"");
            fw.close();
            Toast.makeText(this, ""3rd party credentials saved successfully!"", Toast.LENGTH_SHORT).show();
            // Now you can read the temporary file where ever the credentials are required.
        }",
saveCredentials,Toast.makeText,InsecureDataStorage3Activity.java,unknown,[],High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        EditText usr = (EditText) findViewById(R.id.ids3Usr);
        EditText pwd = (EditText) findViewById(R.id.ids3Pwd);

        File ddir =  new File(getApplicationInfo().dataDir);

        try {
            File uinfo = File.createTempFile(""uinfo"", ""tmp"", ddir);
            uinfo.setReadable(true);
            uinfo.setWritable(true);
            FileWriter fw = new FileWriter(uinfo);
            fw.write(usr.getText().toString() + "":"" + pwd.getText().toString() + ""\n"");
            fw.close();
            Toast.makeText(this, ""3rd party credentials saved successfully!"", Toast.LENGTH_SHORT).show();
            // Now you can read the temporary file where ever the credentials are required.
        }",
saveCredentials,show,InsecureDataStorage3Activity.java,unknown,"[[], []]",High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        EditText usr = (EditText) findViewById(R.id.ids3Usr);
        EditText pwd = (EditText) findViewById(R.id.ids3Pwd);

        File ddir =  new File(getApplicationInfo().dataDir);

        try {
            File uinfo = File.createTempFile(""uinfo"", ""tmp"", ddir);
            uinfo.setReadable(true);
            uinfo.setWritable(true);
            FileWriter fw = new FileWriter(uinfo);
            fw.write(usr.getText().toString() + "":"" + pwd.getText().toString() + ""\n"");
            fw.close();
            Toast.makeText(this, ""3rd party credentials saved successfully!"", Toast.LENGTH_SHORT).show();
            // Now you can read the temporary file where ever the credentials are required.
        }",
saveCredentials,Log.d,InsecureDataStorage3Activity.java,unknown,[],High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        EditText usr = (EditText) findViewById(R.id.ids3Usr);
        EditText pwd = (EditText) findViewById(R.id.ids3Pwd);

        File ddir =  new File(getApplicationInfo().dataDir);

        try {
            File uinfo = File.createTempFile(""uinfo"", ""tmp"", ddir);
            uinfo.setReadable(true);
            uinfo.setWritable(true);
            FileWriter fw = new FileWriter(uinfo);
            fw.write(usr.getText().toString() + "":"" + pwd.getText().toString() + ""\n"");
            fw.close();
            Toast.makeText(this, ""3rd party credentials saved successfully!"", Toast.LENGTH_SHORT).show();
            // Now you can read the temporary file where ever the credentials are required.
        }",
saveCredentials,e.getMessage,InsecureDataStorage3Activity.java,unknown,[],High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        EditText usr = (EditText) findViewById(R.id.ids3Usr);
        EditText pwd = (EditText) findViewById(R.id.ids3Pwd);

        File ddir =  new File(getApplicationInfo().dataDir);

        try {
            File uinfo = File.createTempFile(""uinfo"", ""tmp"", ddir);
            uinfo.setReadable(true);
            uinfo.setWritable(true);
            FileWriter fw = new FileWriter(uinfo);
            fw.write(usr.getText().toString() + "":"" + pwd.getText().toString() + ""\n"");
            fw.close();
            Toast.makeText(this, ""3rd party credentials saved successfully!"", Toast.LENGTH_SHORT).show();
            // Now you can read the temporary file where ever the credentials are required.
        }",
onCreate,setContentView,InsecureDataStorage1Activity.java,unknown,[['activity_insecure_data_storage1']],Mid-level (Logic),Unknown,Direct,"onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_insecure_data_storage1);
    }",
saveCredentials,PreferenceManager.getDefaultSharedPreferences,InsecureDataStorage1Activity.java,unknown,[],High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        SharedPreferences spref = PreferenceManager.getDefaultSharedPreferences(this);
        SharedPreferences.Editor spedit = spref.edit();
        EditText usr = (EditText) findViewById(R.id.ids1Usr);
        EditText pwd = (EditText) findViewById(R.id.ids1Pwd);

        spedit.putString(""user"", usr.getText().toString());
        spedit.putString(""password"", pwd.getText().toString());
        spedit.commit();

        Toast.makeText(this,""3rd party credentials saved successfully!"", Toast.LENGTH_SHORT).show();
    }",
saveCredentials,spref.edit,InsecureDataStorage1Activity.java,unknown,[],High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        SharedPreferences spref = PreferenceManager.getDefaultSharedPreferences(this);
        SharedPreferences.Editor spedit = spref.edit();
        EditText usr = (EditText) findViewById(R.id.ids1Usr);
        EditText pwd = (EditText) findViewById(R.id.ids1Pwd);

        spedit.putString(""user"", usr.getText().toString());
        spedit.putString(""password"", pwd.getText().toString());
        spedit.commit();

        Toast.makeText(this,""3rd party credentials saved successfully!"", Toast.LENGTH_SHORT).show();
    }",
saveCredentials,findViewById,InsecureDataStorage1Activity.java,unknown,"[['ids1Usr'], ['ids1Pwd']]",High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        SharedPreferences spref = PreferenceManager.getDefaultSharedPreferences(this);
        SharedPreferences.Editor spedit = spref.edit();
        EditText usr = (EditText) findViewById(R.id.ids1Usr);
        EditText pwd = (EditText) findViewById(R.id.ids1Pwd);

        spedit.putString(""user"", usr.getText().toString());
        spedit.putString(""password"", pwd.getText().toString());
        spedit.commit();

        Toast.makeText(this,""3rd party credentials saved successfully!"", Toast.LENGTH_SHORT).show();
    }",
saveCredentials,findViewById,InsecureDataStorage1Activity.java,unknown,"[['ids1Usr'], ['ids1Pwd']]",High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        SharedPreferences spref = PreferenceManager.getDefaultSharedPreferences(this);
        SharedPreferences.Editor spedit = spref.edit();
        EditText usr = (EditText) findViewById(R.id.ids1Usr);
        EditText pwd = (EditText) findViewById(R.id.ids1Pwd);

        spedit.putString(""user"", usr.getText().toString());
        spedit.putString(""password"", pwd.getText().toString());
        spedit.commit();

        Toast.makeText(this,""3rd party credentials saved successfully!"", Toast.LENGTH_SHORT).show();
    }",
saveCredentials,spedit.putString,InsecureDataStorage1Activity.java,unknown,[],High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        SharedPreferences spref = PreferenceManager.getDefaultSharedPreferences(this);
        SharedPreferences.Editor spedit = spref.edit();
        EditText usr = (EditText) findViewById(R.id.ids1Usr);
        EditText pwd = (EditText) findViewById(R.id.ids1Pwd);

        spedit.putString(""user"", usr.getText().toString());
        spedit.putString(""password"", pwd.getText().toString());
        spedit.commit();

        Toast.makeText(this,""3rd party credentials saved successfully!"", Toast.LENGTH_SHORT).show();
    }",
saveCredentials,usr.getText,InsecureDataStorage1Activity.java,unknown,[],High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        SharedPreferences spref = PreferenceManager.getDefaultSharedPreferences(this);
        SharedPreferences.Editor spedit = spref.edit();
        EditText usr = (EditText) findViewById(R.id.ids1Usr);
        EditText pwd = (EditText) findViewById(R.id.ids1Pwd);

        spedit.putString(""user"", usr.getText().toString());
        spedit.putString(""password"", pwd.getText().toString());
        spedit.commit();

        Toast.makeText(this,""3rd party credentials saved successfully!"", Toast.LENGTH_SHORT).show();
    }",
saveCredentials,toString,InsecureDataStorage1Activity.java,unknown,"[[], []]",High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        SharedPreferences spref = PreferenceManager.getDefaultSharedPreferences(this);
        SharedPreferences.Editor spedit = spref.edit();
        EditText usr = (EditText) findViewById(R.id.ids1Usr);
        EditText pwd = (EditText) findViewById(R.id.ids1Pwd);

        spedit.putString(""user"", usr.getText().toString());
        spedit.putString(""password"", pwd.getText().toString());
        spedit.commit();

        Toast.makeText(this,""3rd party credentials saved successfully!"", Toast.LENGTH_SHORT).show();
    }",
saveCredentials,spedit.putString,InsecureDataStorage1Activity.java,unknown,[],High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        SharedPreferences spref = PreferenceManager.getDefaultSharedPreferences(this);
        SharedPreferences.Editor spedit = spref.edit();
        EditText usr = (EditText) findViewById(R.id.ids1Usr);
        EditText pwd = (EditText) findViewById(R.id.ids1Pwd);

        spedit.putString(""user"", usr.getText().toString());
        spedit.putString(""password"", pwd.getText().toString());
        spedit.commit();

        Toast.makeText(this,""3rd party credentials saved successfully!"", Toast.LENGTH_SHORT).show();
    }",
saveCredentials,pwd.getText,InsecureDataStorage1Activity.java,unknown,[],High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        SharedPreferences spref = PreferenceManager.getDefaultSharedPreferences(this);
        SharedPreferences.Editor spedit = spref.edit();
        EditText usr = (EditText) findViewById(R.id.ids1Usr);
        EditText pwd = (EditText) findViewById(R.id.ids1Pwd);

        spedit.putString(""user"", usr.getText().toString());
        spedit.putString(""password"", pwd.getText().toString());
        spedit.commit();

        Toast.makeText(this,""3rd party credentials saved successfully!"", Toast.LENGTH_SHORT).show();
    }",
saveCredentials,toString,InsecureDataStorage1Activity.java,unknown,"[[], []]",High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        SharedPreferences spref = PreferenceManager.getDefaultSharedPreferences(this);
        SharedPreferences.Editor spedit = spref.edit();
        EditText usr = (EditText) findViewById(R.id.ids1Usr);
        EditText pwd = (EditText) findViewById(R.id.ids1Pwd);

        spedit.putString(""user"", usr.getText().toString());
        spedit.putString(""password"", pwd.getText().toString());
        spedit.commit();

        Toast.makeText(this,""3rd party credentials saved successfully!"", Toast.LENGTH_SHORT).show();
    }",
saveCredentials,spedit.commit,InsecureDataStorage1Activity.java,unknown,[],High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        SharedPreferences spref = PreferenceManager.getDefaultSharedPreferences(this);
        SharedPreferences.Editor spedit = spref.edit();
        EditText usr = (EditText) findViewById(R.id.ids1Usr);
        EditText pwd = (EditText) findViewById(R.id.ids1Pwd);

        spedit.putString(""user"", usr.getText().toString());
        spedit.putString(""password"", pwd.getText().toString());
        spedit.commit();

        Toast.makeText(this,""3rd party credentials saved successfully!"", Toast.LENGTH_SHORT).show();
    }",
saveCredentials,Toast.makeText,InsecureDataStorage1Activity.java,unknown,[],High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        SharedPreferences spref = PreferenceManager.getDefaultSharedPreferences(this);
        SharedPreferences.Editor spedit = spref.edit();
        EditText usr = (EditText) findViewById(R.id.ids1Usr);
        EditText pwd = (EditText) findViewById(R.id.ids1Pwd);

        spedit.putString(""user"", usr.getText().toString());
        spedit.putString(""password"", pwd.getText().toString());
        spedit.commit();

        Toast.makeText(this,""3rd party credentials saved successfully!"", Toast.LENGTH_SHORT).show();
    }",
saveCredentials,show,InsecureDataStorage1Activity.java,unknown,[[]],High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        SharedPreferences spref = PreferenceManager.getDefaultSharedPreferences(this);
        SharedPreferences.Editor spedit = spref.edit();
        EditText usr = (EditText) findViewById(R.id.ids1Usr);
        EditText pwd = (EditText) findViewById(R.id.ids1Pwd);

        spedit.putString(""user"", usr.getText().toString());
        spedit.putString(""password"", pwd.getText().toString());
        spedit.commit();

        Toast.makeText(this,""3rd party credentials saved successfully!"", Toast.LENGTH_SHORT).show();
    }",
onCreate,openOrCreateDatabase,InsecureDataStorage2Activity.java,unknown,"[['""ids2""', 'MODE_PRIVATE', 'null']]",Mid-level (Logic),Unknown,Direct,"onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        try {
            mDB = openOrCreateDatabase(""ids2"", MODE_PRIVATE, null);
            mDB.execSQL(""CREATE TABLE IF NOT EXISTS myuser(user VARCHAR, password VARCHAR);"");
        }",
onCreate,mDB.execSQL,InsecureDataStorage2Activity.java,unknown,[],Mid-level (Logic),Unknown,Direct,"onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        try {
            mDB = openOrCreateDatabase(""ids2"", MODE_PRIVATE, null);
            mDB.execSQL(""CREATE TABLE IF NOT EXISTS myuser(user VARCHAR, password VARCHAR);"");
        }",
onCreate,Log.d,InsecureDataStorage2Activity.java,unknown,[],Mid-level (Logic),Unknown,Direct,"onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        try {
            mDB = openOrCreateDatabase(""ids2"", MODE_PRIVATE, null);
            mDB.execSQL(""CREATE TABLE IF NOT EXISTS myuser(user VARCHAR, password VARCHAR);"");
        }",
onCreate,e.getMessage,InsecureDataStorage2Activity.java,unknown,[],Mid-level (Logic),Unknown,Direct,"onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        try {
            mDB = openOrCreateDatabase(""ids2"", MODE_PRIVATE, null);
            mDB.execSQL(""CREATE TABLE IF NOT EXISTS myuser(user VARCHAR, password VARCHAR);"");
        }",
onCreate,setContentView,InsecureDataStorage2Activity.java,unknown,[['activity_insecure_data_storage2']],Mid-level (Logic),Unknown,Direct,"onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        try {
            mDB = openOrCreateDatabase(""ids2"", MODE_PRIVATE, null);
            mDB.execSQL(""CREATE TABLE IF NOT EXISTS myuser(user VARCHAR, password VARCHAR);"");
        }",
saveCredentials,findViewById,InsecureDataStorage2Activity.java,unknown,"[['ids2Usr'], ['ids2Pwd']]",High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        EditText usr = (EditText) findViewById(R.id.ids2Usr);
        EditText pwd = (EditText) findViewById(R.id.ids2Pwd);
        try {
            mDB.execSQL(""INSERT INTO myuser VALUES ('""+ usr.getText().toString() +""', '""+ pwd.getText().toString() +""');"");
            mDB.close();
        }",
saveCredentials,findViewById,InsecureDataStorage2Activity.java,unknown,"[['ids2Usr'], ['ids2Pwd']]",High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        EditText usr = (EditText) findViewById(R.id.ids2Usr);
        EditText pwd = (EditText) findViewById(R.id.ids2Pwd);
        try {
            mDB.execSQL(""INSERT INTO myuser VALUES ('""+ usr.getText().toString() +""', '""+ pwd.getText().toString() +""');"");
            mDB.close();
        }",
saveCredentials,mDB.execSQL,InsecureDataStorage2Activity.java,unknown,[],High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        EditText usr = (EditText) findViewById(R.id.ids2Usr);
        EditText pwd = (EditText) findViewById(R.id.ids2Pwd);
        try {
            mDB.execSQL(""INSERT INTO myuser VALUES ('""+ usr.getText().toString() +""', '""+ pwd.getText().toString() +""');"");
            mDB.close();
        }",
saveCredentials,usr.getText,InsecureDataStorage2Activity.java,unknown,[],High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        EditText usr = (EditText) findViewById(R.id.ids2Usr);
        EditText pwd = (EditText) findViewById(R.id.ids2Pwd);
        try {
            mDB.execSQL(""INSERT INTO myuser VALUES ('""+ usr.getText().toString() +""', '""+ pwd.getText().toString() +""');"");
            mDB.close();
        }",
saveCredentials,toString,InsecureDataStorage2Activity.java,unknown,"[[], []]",High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        EditText usr = (EditText) findViewById(R.id.ids2Usr);
        EditText pwd = (EditText) findViewById(R.id.ids2Pwd);
        try {
            mDB.execSQL(""INSERT INTO myuser VALUES ('""+ usr.getText().toString() +""', '""+ pwd.getText().toString() +""');"");
            mDB.close();
        }",
saveCredentials,pwd.getText,InsecureDataStorage2Activity.java,unknown,[],High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        EditText usr = (EditText) findViewById(R.id.ids2Usr);
        EditText pwd = (EditText) findViewById(R.id.ids2Pwd);
        try {
            mDB.execSQL(""INSERT INTO myuser VALUES ('""+ usr.getText().toString() +""', '""+ pwd.getText().toString() +""');"");
            mDB.close();
        }",
saveCredentials,toString,InsecureDataStorage2Activity.java,unknown,"[[], []]",High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        EditText usr = (EditText) findViewById(R.id.ids2Usr);
        EditText pwd = (EditText) findViewById(R.id.ids2Pwd);
        try {
            mDB.execSQL(""INSERT INTO myuser VALUES ('""+ usr.getText().toString() +""', '""+ pwd.getText().toString() +""');"");
            mDB.close();
        }",
saveCredentials,mDB.close,InsecureDataStorage2Activity.java,unknown,[],High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        EditText usr = (EditText) findViewById(R.id.ids2Usr);
        EditText pwd = (EditText) findViewById(R.id.ids2Pwd);
        try {
            mDB.execSQL(""INSERT INTO myuser VALUES ('""+ usr.getText().toString() +""', '""+ pwd.getText().toString() +""');"");
            mDB.close();
        }",
saveCredentials,Log.d,InsecureDataStorage2Activity.java,unknown,[],High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        EditText usr = (EditText) findViewById(R.id.ids2Usr);
        EditText pwd = (EditText) findViewById(R.id.ids2Pwd);
        try {
            mDB.execSQL(""INSERT INTO myuser VALUES ('""+ usr.getText().toString() +""', '""+ pwd.getText().toString() +""');"");
            mDB.close();
        }",
saveCredentials,e.getMessage,InsecureDataStorage2Activity.java,unknown,[],High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        EditText usr = (EditText) findViewById(R.id.ids2Usr);
        EditText pwd = (EditText) findViewById(R.id.ids2Pwd);
        try {
            mDB.execSQL(""INSERT INTO myuser VALUES ('""+ usr.getText().toString() +""', '""+ pwd.getText().toString() +""');"");
            mDB.close();
        }",
saveCredentials,Toast.makeText,InsecureDataStorage2Activity.java,unknown,[],High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        EditText usr = (EditText) findViewById(R.id.ids2Usr);
        EditText pwd = (EditText) findViewById(R.id.ids2Pwd);
        try {
            mDB.execSQL(""INSERT INTO myuser VALUES ('""+ usr.getText().toString() +""', '""+ pwd.getText().toString() +""');"");
            mDB.close();
        }",
saveCredentials,show,InsecureDataStorage2Activity.java,unknown,[[]],High-level (Application),Unknown,Direct,"saveCredentials(View view) {
        EditText usr = (EditText) findViewById(R.id.ids2Usr);
        EditText pwd = (EditText) findViewById(R.id.ids2Pwd);
        try {
            mDB.execSQL(""INSERT INTO myuser VALUES ('""+ usr.getText().toString() +""', '""+ pwd.getText().toString() +""');"");
            mDB.close();
        }",
onCreate,setContentView,MainActivity.java,unknown,[['activity_main']],Mid-level (Logic),Unknown,Direct,"onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);

    }",
onCreate,findViewById,MainActivity.java,unknown,[['toolbar']],Mid-level (Logic),Unknown,Direct,"onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);

    }",
onCreate,setSupportActionBar,MainActivity.java,unknown,[['toolbar']],Mid-level (Logic),Unknown,Direct,"onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);

    }",
onCreateOptionsMenu,getMenuInflater,MainActivity.java,unknown,[[]],High-level (Application),Unknown,Direct,"onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.menu_main, menu);
        return true;
    }",
onCreateOptionsMenu,inflate,MainActivity.java,unknown,"[['menu_main', 'menu']]",High-level (Application),Unknown,Direct,"onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.menu_main, menu);
        return true;
    }",
onOptionsItemSelected,item.getItemId,MainActivity.java,unknown,[],High-level (Application),Unknown,Direct,"onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();

        //noinspection SimplifiableIfStatement
        if (id == R.id.action_settings) {
            return true;
        }",
startChallenge,findViewById,MainActivity.java,unknown,"[['d1button'], ['d2button'], ['d3button'], ['d4button'], ['d5button'], ['d6button'], ['d7button'], ['d8button'], ['d9button'], ['d10button'], ['d11button'], ['d12button'], ['d13button']]",High-level (Application),Unknown,Direct,"startChallenge(View view) {

        if (view == findViewById(R.id.d1button)) {
            Intent i = new Intent(this, LogActivity.class);
            startActivity(i);
        }",
startChallenge,startActivity,MainActivity.java,unknown,"[['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i']]",High-level (Application),Unknown,Direct,"startChallenge(View view) {

        if (view == findViewById(R.id.d1button)) {
            Intent i = new Intent(this, LogActivity.class);
            startActivity(i);
        }",
startChallenge,findViewById,MainActivity.java,unknown,"[['d1button'], ['d2button'], ['d3button'], ['d4button'], ['d5button'], ['d6button'], ['d7button'], ['d8button'], ['d9button'], ['d10button'], ['d11button'], ['d12button'], ['d13button']]",High-level (Application),Unknown,Direct,"startChallenge(View view) {

        if (view == findViewById(R.id.d1button)) {
            Intent i = new Intent(this, LogActivity.class);
            startActivity(i);
        }",
startChallenge,startActivity,MainActivity.java,unknown,"[['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i']]",High-level (Application),Unknown,Direct,"startChallenge(View view) {

        if (view == findViewById(R.id.d1button)) {
            Intent i = new Intent(this, LogActivity.class);
            startActivity(i);
        }",
startChallenge,findViewById,MainActivity.java,unknown,"[['d1button'], ['d2button'], ['d3button'], ['d4button'], ['d5button'], ['d6button'], ['d7button'], ['d8button'], ['d9button'], ['d10button'], ['d11button'], ['d12button'], ['d13button']]",High-level (Application),Unknown,Direct,"startChallenge(View view) {

        if (view == findViewById(R.id.d1button)) {
            Intent i = new Intent(this, LogActivity.class);
            startActivity(i);
        }",
startChallenge,startActivity,MainActivity.java,unknown,"[['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i']]",High-level (Application),Unknown,Direct,"startChallenge(View view) {

        if (view == findViewById(R.id.d1button)) {
            Intent i = new Intent(this, LogActivity.class);
            startActivity(i);
        }",
startChallenge,findViewById,MainActivity.java,unknown,"[['d1button'], ['d2button'], ['d3button'], ['d4button'], ['d5button'], ['d6button'], ['d7button'], ['d8button'], ['d9button'], ['d10button'], ['d11button'], ['d12button'], ['d13button']]",High-level (Application),Unknown,Direct,"startChallenge(View view) {

        if (view == findViewById(R.id.d1button)) {
            Intent i = new Intent(this, LogActivity.class);
            startActivity(i);
        }",
startChallenge,startActivity,MainActivity.java,unknown,"[['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i']]",High-level (Application),Unknown,Direct,"startChallenge(View view) {

        if (view == findViewById(R.id.d1button)) {
            Intent i = new Intent(this, LogActivity.class);
            startActivity(i);
        }",
startChallenge,findViewById,MainActivity.java,unknown,"[['d1button'], ['d2button'], ['d3button'], ['d4button'], ['d5button'], ['d6button'], ['d7button'], ['d8button'], ['d9button'], ['d10button'], ['d11button'], ['d12button'], ['d13button']]",High-level (Application),Unknown,Direct,"startChallenge(View view) {

        if (view == findViewById(R.id.d1button)) {
            Intent i = new Intent(this, LogActivity.class);
            startActivity(i);
        }",
startChallenge,startActivity,MainActivity.java,unknown,"[['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i']]",High-level (Application),Unknown,Direct,"startChallenge(View view) {

        if (view == findViewById(R.id.d1button)) {
            Intent i = new Intent(this, LogActivity.class);
            startActivity(i);
        }",
startChallenge,findViewById,MainActivity.java,unknown,"[['d1button'], ['d2button'], ['d3button'], ['d4button'], ['d5button'], ['d6button'], ['d7button'], ['d8button'], ['d9button'], ['d10button'], ['d11button'], ['d12button'], ['d13button']]",High-level (Application),Unknown,Direct,"startChallenge(View view) {

        if (view == findViewById(R.id.d1button)) {
            Intent i = new Intent(this, LogActivity.class);
            startActivity(i);
        }",
startChallenge,startActivity,MainActivity.java,unknown,"[['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i']]",High-level (Application),Unknown,Direct,"startChallenge(View view) {

        if (view == findViewById(R.id.d1button)) {
            Intent i = new Intent(this, LogActivity.class);
            startActivity(i);
        }",
startChallenge,findViewById,MainActivity.java,unknown,"[['d1button'], ['d2button'], ['d3button'], ['d4button'], ['d5button'], ['d6button'], ['d7button'], ['d8button'], ['d9button'], ['d10button'], ['d11button'], ['d12button'], ['d13button']]",High-level (Application),Unknown,Direct,"startChallenge(View view) {

        if (view == findViewById(R.id.d1button)) {
            Intent i = new Intent(this, LogActivity.class);
            startActivity(i);
        }",
startChallenge,startActivity,MainActivity.java,unknown,"[['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i']]",High-level (Application),Unknown,Direct,"startChallenge(View view) {

        if (view == findViewById(R.id.d1button)) {
            Intent i = new Intent(this, LogActivity.class);
            startActivity(i);
        }",
startChallenge,findViewById,MainActivity.java,unknown,"[['d1button'], ['d2button'], ['d3button'], ['d4button'], ['d5button'], ['d6button'], ['d7button'], ['d8button'], ['d9button'], ['d10button'], ['d11button'], ['d12button'], ['d13button']]",High-level (Application),Unknown,Direct,"startChallenge(View view) {

        if (view == findViewById(R.id.d1button)) {
            Intent i = new Intent(this, LogActivity.class);
            startActivity(i);
        }",
startChallenge,startActivity,MainActivity.java,unknown,"[['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i']]",High-level (Application),Unknown,Direct,"startChallenge(View view) {

        if (view == findViewById(R.id.d1button)) {
            Intent i = new Intent(this, LogActivity.class);
            startActivity(i);
        }",
startChallenge,findViewById,MainActivity.java,unknown,"[['d1button'], ['d2button'], ['d3button'], ['d4button'], ['d5button'], ['d6button'], ['d7button'], ['d8button'], ['d9button'], ['d10button'], ['d11button'], ['d12button'], ['d13button']]",High-level (Application),Unknown,Direct,"startChallenge(View view) {

        if (view == findViewById(R.id.d1button)) {
            Intent i = new Intent(this, LogActivity.class);
            startActivity(i);
        }",
startChallenge,startActivity,MainActivity.java,unknown,"[['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i']]",High-level (Application),Unknown,Direct,"startChallenge(View view) {

        if (view == findViewById(R.id.d1button)) {
            Intent i = new Intent(this, LogActivity.class);
            startActivity(i);
        }",
startChallenge,findViewById,MainActivity.java,unknown,"[['d1button'], ['d2button'], ['d3button'], ['d4button'], ['d5button'], ['d6button'], ['d7button'], ['d8button'], ['d9button'], ['d10button'], ['d11button'], ['d12button'], ['d13button']]",High-level (Application),Unknown,Direct,"startChallenge(View view) {

        if (view == findViewById(R.id.d1button)) {
            Intent i = new Intent(this, LogActivity.class);
            startActivity(i);
        }",
startChallenge,startActivity,MainActivity.java,unknown,"[['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i']]",High-level (Application),Unknown,Direct,"startChallenge(View view) {

        if (view == findViewById(R.id.d1button)) {
            Intent i = new Intent(this, LogActivity.class);
            startActivity(i);
        }",
startChallenge,findViewById,MainActivity.java,unknown,"[['d1button'], ['d2button'], ['d3button'], ['d4button'], ['d5button'], ['d6button'], ['d7button'], ['d8button'], ['d9button'], ['d10button'], ['d11button'], ['d12button'], ['d13button']]",High-level (Application),Unknown,Direct,"startChallenge(View view) {

        if (view == findViewById(R.id.d1button)) {
            Intent i = new Intent(this, LogActivity.class);
            startActivity(i);
        }",
startChallenge,startActivity,MainActivity.java,unknown,"[['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i']]",High-level (Application),Unknown,Direct,"startChallenge(View view) {

        if (view == findViewById(R.id.d1button)) {
            Intent i = new Intent(this, LogActivity.class);
            startActivity(i);
        }",
startChallenge,findViewById,MainActivity.java,unknown,"[['d1button'], ['d2button'], ['d3button'], ['d4button'], ['d5button'], ['d6button'], ['d7button'], ['d8button'], ['d9button'], ['d10button'], ['d11button'], ['d12button'], ['d13button']]",High-level (Application),Unknown,Direct,"startChallenge(View view) {

        if (view == findViewById(R.id.d1button)) {
            Intent i = new Intent(this, LogActivity.class);
            startActivity(i);
        }",
startChallenge,startActivity,MainActivity.java,unknown,"[['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i']]",High-level (Application),Unknown,Direct,"startChallenge(View view) {

        if (view == findViewById(R.id.d1button)) {
            Intent i = new Intent(this, LogActivity.class);
            startActivity(i);
        }",
startChallenge,findViewById,MainActivity.java,unknown,"[['d1button'], ['d2button'], ['d3button'], ['d4button'], ['d5button'], ['d6button'], ['d7button'], ['d8button'], ['d9button'], ['d10button'], ['d11button'], ['d12button'], ['d13button']]",High-level (Application),Unknown,Direct,"startChallenge(View view) {

        if (view == findViewById(R.id.d1button)) {
            Intent i = new Intent(this, LogActivity.class);
            startActivity(i);
        }",
startChallenge,startActivity,MainActivity.java,unknown,"[['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i'], ['i']]",High-level (Application),Unknown,Direct,"startChallenge(View view) {

        if (view == findViewById(R.id.d1button)) {
            Intent i = new Intent(this, LogActivity.class);
            startActivity(i);
        }",
onCreate,setContentView,Hardcode2Activity.java,unknown,[['activity_hardcode2']],Mid-level (Logic),Unknown,Direct,"onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_hardcode2);

        djni = new DivaJni();
    }",
access,findViewById,Hardcode2Activity.java,unknown,[['hc2Key']],High-level (Application),Unknown,Direct,"access(View view) {
        EditText hckey = (EditText) findViewById(R.id.hc2Key);

        if (djni.access(hckey.getText().toString()) != 0) {
            Toast.makeText(this, ""Access granted! See you on the other side :)"", Toast.LENGTH_SHORT).show();
        }",
access,djni.access,Hardcode2Activity.java,unknown,[],High-level (Application),Unknown,Direct,"access(View view) {
        EditText hckey = (EditText) findViewById(R.id.hc2Key);

        if (djni.access(hckey.getText().toString()) != 0) {
            Toast.makeText(this, ""Access granted! See you on the other side :)"", Toast.LENGTH_SHORT).show();
        }",
access,hckey.getText,Hardcode2Activity.java,unknown,[],High-level (Application),Unknown,Direct,"access(View view) {
        EditText hckey = (EditText) findViewById(R.id.hc2Key);

        if (djni.access(hckey.getText().toString()) != 0) {
            Toast.makeText(this, ""Access granted! See you on the other side :)"", Toast.LENGTH_SHORT).show();
        }",
access,toString,Hardcode2Activity.java,unknown,[[]],High-level (Application),Unknown,Direct,"access(View view) {
        EditText hckey = (EditText) findViewById(R.id.hc2Key);

        if (djni.access(hckey.getText().toString()) != 0) {
            Toast.makeText(this, ""Access granted! See you on the other side :)"", Toast.LENGTH_SHORT).show();
        }",
access,Toast.makeText,Hardcode2Activity.java,unknown,[],High-level (Application),Unknown,Direct,"access(View view) {
        EditText hckey = (EditText) findViewById(R.id.hc2Key);

        if (djni.access(hckey.getText().toString()) != 0) {
            Toast.makeText(this, ""Access granted! See you on the other side :)"", Toast.LENGTH_SHORT).show();
        }",
access,show,Hardcode2Activity.java,unknown,"[[], []]",High-level (Application),Unknown,Direct,"access(View view) {
        EditText hckey = (EditText) findViewById(R.id.hc2Key);

        if (djni.access(hckey.getText().toString()) != 0) {
            Toast.makeText(this, ""Access granted! See you on the other side :)"", Toast.LENGTH_SHORT).show();
        }",
access,Toast.makeText,Hardcode2Activity.java,unknown,[],High-level (Application),Unknown,Direct,"access(View view) {
        EditText hckey = (EditText) findViewById(R.id.hc2Key);

        if (djni.access(hckey.getText().toString()) != 0) {
            Toast.makeText(this, ""Access granted! See you on the other side :)"", Toast.LENGTH_SHORT).show();
        }",
access,show,Hardcode2Activity.java,unknown,"[[], []]",High-level (Application),Unknown,Direct,"access(View view) {
        EditText hckey = (EditText) findViewById(R.id.hc2Key);

        if (djni.access(hckey.getText().toString()) != 0) {
            Toast.makeText(this, ""Access granted! See you on the other side :)"", Toast.LENGTH_SHORT).show();
        }",
